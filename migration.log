We're at /edx/app/edxapp
Working in /tmp/tmp.Um2GfQ0IGZ
We're at /tmp/tmp.Um2GfQ0IGZ
New python executable in venv/bin/python
Installing setuptools, pip, wheel...done.
Requirement already satisfied (use --upgrade to upgrade): pip==7.1.2 in ./venv/lib/python2.7/site-packages (from -r configuration/pre-requirements.txt (line 1))
Collecting ansible==1.9.3-edx from git+https://github.com/edx/ansible.git@stable-1.9.3-rc1-edx#egg=ansible==1.9.3-edx (from -r configuration/requirements.txt (line 1))
  Cloning https://github.com/edx/ansible.git (to stable-1.9.3-rc1-edx) to /tmp/pip-build-EjzWoY/ansible
Collecting PyYAML==3.11 (from -r configuration/requirements.txt (line 2))
Collecting Jinja2==2.7.3 (from -r configuration/requirements.txt (line 3))
Collecting MarkupSafe==0.23 (from -r configuration/requirements.txt (line 4))
Collecting boto==2.32.1 (from -r configuration/requirements.txt (line 5))
  Using cached boto-2.32.1-py2.py3-none-any.whl
Collecting ecdsa==0.11 (from -r configuration/requirements.txt (line 6))
Collecting paramiko==1.15.1 (from -r configuration/requirements.txt (line 7))
  Using cached paramiko-1.15.1-py2.py3-none-any.whl
Collecting pycrypto==2.6.1 (from -r configuration/requirements.txt (line 8))
Requirement already satisfied (use --upgrade to upgrade): wsgiref==0.1.2 in /usr/lib/python2.7 (from -r configuration/requirements.txt (line 9))
Collecting docopt==0.6.1 (from -r configuration/requirements.txt (line 10))
Collecting python-simple-hipchat==0.2 (from -r configuration/requirements.txt (line 11))
Collecting prettytable==0.7.2 (from -r configuration/requirements.txt (line 12))
Collecting awscli==1.4.2 (from -r configuration/requirements.txt (line 13))
Collecting requests (from -r configuration/requirements.txt (line 14))
  Using cached requests-2.10.0-py2.py3-none-any.whl
Collecting datadog==0.8.0 (from -r configuration/requirements.txt (line 15))
Collecting pymongo==3.1 (from -r configuration/requirements.txt (line 16))
Collecting MySQL-python==1.2.5 (from -r configuration/requirements.txt (line 17))
Requirement already satisfied (use --upgrade to upgrade): setuptools in ./venv/lib/python2.7/site-packages (from ansible==1.9.3-edx->-r configuration/requirements.txt (line 1))
Collecting rsa==3.1.2 (from awscli==1.4.2->-r configuration/requirements.txt (line 13))
Collecting docutils>=0.10 (from awscli==1.4.2->-r configuration/requirements.txt (line 13))
Collecting six>=1.1.0 (from awscli==1.4.2->-r configuration/requirements.txt (line 13))
  Using cached six-1.10.0-py2.py3-none-any.whl
Collecting botocore<0.63.0,>=0.62.0 (from awscli==1.4.2->-r configuration/requirements.txt (line 13))
Collecting colorama==0.2.5 (from awscli==1.4.2->-r configuration/requirements.txt (line 13))
Collecting bcdoc<0.13.0,>=0.12.0 (from awscli==1.4.2->-r configuration/requirements.txt (line 13))
Collecting simplejson>=2.0.9 (from datadog==0.8.0->-r configuration/requirements.txt (line 15))
Collecting decorator>=3.3.2 (from datadog==0.8.0->-r configuration/requirements.txt (line 15))
  Using cached decorator-4.0.10-py2.py3-none-any.whl
Collecting pyasn1>=0.1.3 (from rsa==3.1.2->awscli==1.4.2->-r configuration/requirements.txt (line 13))
  Using cached pyasn1-0.1.9-py2.py3-none-any.whl
Collecting jmespath==0.4.1 (from botocore<0.63.0,>=0.62.0->awscli==1.4.2->-r configuration/requirements.txt (line 13))
Collecting python-dateutil>=2.1 (from botocore<0.63.0,>=0.62.0->awscli==1.4.2->-r configuration/requirements.txt (line 13))
  Using cached python_dateutil-2.5.3-py2.py3-none-any.whl
Installing collected packages: ecdsa, pycrypto, paramiko, MarkupSafe, Jinja2, PyYAML, ansible, boto, docopt, python-simple-hipchat, prettytable, pyasn1, rsa, docutils, six, jmespath, python-dateutil, botocore, colorama, bcdoc, awscli, requests, simplejson, decorator, datadog, pymongo, MySQL-python
  Running setup.py install for ansible
Successfully installed Jinja2-2.7.3 MarkupSafe-0.23 MySQL-python-1.2.5 PyYAML-3.11 ansible-1.9.3-edx awscli-1.4.2 bcdoc-0.12.2 boto-2.32.1 botocore-0.62.0 colorama-0.2.5 datadog-0.8.0 decorator-4.0.10 docopt-0.6.1 docutils-0.12 ecdsa-0.11 jmespath-0.4.1 paramiko-1.15.1 prettytable-0.7.2 pyasn1-0.1.9 pycrypto-2.6.1 pymongo-3.1 python-dateutil-2.5.3 python-simple-hipchat-0.2 requests-2.10.0 rsa-3.1.2 simplejson-3.8.2 six-1.10.0
MongoDB shell version: 2.6.12
connecting to: cs_comments_service
Add the new indexes for the context field
Adding context to all comment threads where it does not yet exist

{
	"connectionId" : 6,
	"updatedExisting" : false,
	"n" : 0,
	"syncMillis" : 0,
	"writtenTo" : null,
	"err" : null,
	"ok" : 1
}
Upgrading to the end of Django 1.4
We're at /tmp/tmp.Um2GfQ0IGZ/configuration/playbooks/vagrant
!!! CHECKPOINT 1 !!!
Removing .bundle/
Removing bin/
Removing node_modules/
GIT CLEAN OKAY ON edx-platform

PLAY [Update fullstack to a specific intermediate revision] ******************* 

GATHERING FACTS *************************************************************** 
ok: [localhost]

TASK: [user | debug var=user_info] ******************************************** 
ok: [localhost] => {
    "var": {
        "user_info": []
    }
}

TASK: [user | create the edxadmin group] ************************************** 
ok: [localhost]

TASK: [user | Install role-independent useful system packages] **************** 
ok: [localhost] => (item=curl)

TASK: [user | ensure sudoers.d is read] *************************************** 
ok: [localhost]

TASK: [user | grant full sudo access to the edxadmin group] ******************* 
ok: [localhost]

TASK: [user | create the users] *********************************************** 
skipping: [localhost]

TASK: [user | create .ssh directory] ****************************************** 
skipping: [localhost]

TASK: [user | assign admin role to admin users] ******************************* 
skipping: [localhost]

TASK: [user | get github key[s]] ********************************************** 
skipping: [localhost]

TASK: [user | update the authorized_keys file] ******************************** 
skipping: [localhost]

TASK: [user | create bashrc file for normal users] **************************** 
skipping: [localhost]

TASK: [user | create .profile for all users] ********************************** 
skipping: [localhost]

TASK: [user | modify shell for restricted users] ****************************** 
skipping: [localhost]

TASK: [user | create bashrc file for restricted users] ************************ 
skipping: [localhost]

TASK: [user | create sudoers file from template] ****************************** 
ok: [localhost]

TASK: [user | change home directory ownership to root for restricted users] *** 
skipping: [localhost]

TASK: [user | create ~/bin directory] ***************************************** 
skipping: [localhost]

TASK: [user | create allowed command links] *********************************** 
skipping: [localhost]

TASK: [security | install security packages] ********************************** 
skipping: [localhost]

TASK: [security | update all system packages] ********************************* 
skipping: [localhost]

TASK: [security | configure periodic unattended-upgrades] ********************* 
skipping: [localhost]

TASK: [security | disable unattended-upgrades] ******************************** 
skipping: [localhost]

TASK: [security | only unattended-upgrade from security repo] ***************** 
skipping: [localhost]

TASK: [security | disable security only updates on unattended-upgrades] ******* 
skipping: [localhost]

TASK: [security | Check if we are vulnerable] ********************************* 
skipping: [localhost]

TASK: [security | Apply bash security update if we are vulnerable] ************ 
skipping: [localhost]

TASK: [security | Check again and fail if we are still vulnerable] ************ 
skipping: [localhost]

TASK: [security | GHOST.c] **************************************************** 
skipping: [localhost]

TASK: [security | compile GHOST] ********************************************** 
skipping: [localhost]

TASK: [security | Check if we are vulnerable] ********************************* 
skipping: [localhost]

TASK: [security | Apply glibc security update if we are vulnerable] *********** 
skipping: [localhost]

TASK: [common | Update CA Certificates] *************************************** 
changed: [localhost]

TASK: [common | Add user www-data] ******************************************** 
ok: [localhost]

TASK: [common | check if instance is vagrant] ********************************* 
ok: [localhost]

TASK: [common | add edx ppa apt key] ****************************************** 
ok: [localhost]

TASK: [common | Add git apt repository] *************************************** 
ok: [localhost]

TASK: [common | Add edx apt repository] *************************************** 
ok: [localhost]

TASK: [common | Install role-independent useful system packages] ************** 
ok: [localhost] => (item=ntp,lynx-cur,logrotate,rsyslog,git,unzip,python2.7=2.7.10-0+precise1,python-pip,python2.7-dev)

TASK: [common | Create common directories] ************************************ 
ok: [localhost] => (item={'path': u'/edx/var'})
ok: [localhost] => (item={'path': u'/edx/app'})
ok: [localhost] => (item={'path': u'/edx/bin'})
ok: [localhost] => (item={'path': u'/edx/etc'})
ok: [localhost] => (item={'owner': u'syslog', 'path': u'/edx/var/log', 'group': u'syslog'})
ok: [localhost] => (item={'path': '/etc/logrotate.d/hourly'})
ok: [localhost] => (item={'path': '/etc/rsyslog.d/50-default.conf', 'state': 'absent'})

TASK: [common | upload sudo config for key forwarding as root] **************** 
ok: [localhost]

TASK: [common | pip install virtualenv] *************************************** 
changed: [localhost] => (item=pip==7.1.2)
ok: [localhost] => (item=setuptools==18.3.2)
ok: [localhost] => (item=virtualenv==13.1.2)
ok: [localhost] => (item=virtualenvwrapper)

TASK: [common | update /etc/hosts] ******************************************** 
skipping: [localhost]

TASK: [common | update /etc/hostname] ***************************************** 
skipping: [localhost]

TASK: [common | run hostname] ************************************************* 
skipping: [localhost]

TASK: [common | Copy the templates to their respestive destination] *********** 
ok: [localhost] => (item={'dest': '/etc/rsyslog.d/99-edx.conf', 'src': 'edx_rsyslog.j2'})
ok: [localhost] => (item={'dest': '/etc/logrotate.d/hourly/edx-services', 'src': 'etc/logrotate.d/hourly/edx_logrotate.j2'})
ok: [localhost] => (item={'dest': '/etc/cron.hourly/logrotate', 'src': 'etc/cron.hourly/logrotate.j2', 'mode': '555'})
ok: [localhost] => (item={'dest': '/etc/logrotate.d/hourly/tracking.log', 'src': 'etc/logrotate.d/hourly/edx_logrotate_tracking_log.j2'})

TASK: [common | restart rsyslogd] ********************************************* 
skipping: [localhost]

TASK: [server_utils | Install system packages] ******************************** 
ok: [localhost] => (item=ack-grep,mosh,curl,tree,screen,tmux,curl,vim-tiny,dnsutils,inetutils-telnet,netcat)

TASK: [common | Update CA Certificates] *************************************** 
changed: [localhost]

TASK: [common | Add user www-data] ******************************************** 
ok: [localhost]

TASK: [common | check if instance is vagrant] ********************************* 
ok: [localhost]

TASK: [common | add edx ppa apt key] ****************************************** 
ok: [localhost]

TASK: [common | Add git apt repository] *************************************** 
ok: [localhost]

TASK: [common | Add edx apt repository] *************************************** 
ok: [localhost]

TASK: [common | Install role-independent useful system packages] ************** 
ok: [localhost] => (item=ntp,lynx-cur,logrotate,rsyslog,git,unzip,python2.7=2.7.10-0+precise1,python-pip,python2.7-dev)

TASK: [common | Create common directories] ************************************ 
ok: [localhost] => (item={'path': u'/edx/var'})
ok: [localhost] => (item={'path': u'/edx/app'})
ok: [localhost] => (item={'path': u'/edx/bin'})
ok: [localhost] => (item={'path': u'/edx/etc'})
ok: [localhost] => (item={'owner': u'syslog', 'path': u'/edx/var/log', 'group': u'syslog'})
ok: [localhost] => (item={'path': '/etc/logrotate.d/hourly'})
ok: [localhost] => (item={'path': '/etc/rsyslog.d/50-default.conf', 'state': 'absent'})

TASK: [common | upload sudo config for key forwarding as root] **************** 
ok: [localhost]

TASK: [common | pip install virtualenv] *************************************** 
ok: [localhost] => (item=pip==7.1.2)
ok: [localhost] => (item=setuptools==18.3.2)
ok: [localhost] => (item=virtualenv==13.1.2)
ok: [localhost] => (item=virtualenvwrapper)

TASK: [common | update /etc/hosts] ******************************************** 
skipping: [localhost]

TASK: [common | update /etc/hostname] ***************************************** 
skipping: [localhost]

TASK: [common | run hostname] ************************************************* 
skipping: [localhost]

TASK: [common | Copy the templates to their respestive destination] *********** 
ok: [localhost] => (item={'dest': '/etc/rsyslog.d/99-edx.conf', 'src': 'edx_rsyslog.j2'})
ok: [localhost] => (item={'dest': '/etc/logrotate.d/hourly/edx-services', 'src': 'etc/logrotate.d/hourly/edx_logrotate.j2'})
ok: [localhost] => (item={'dest': '/etc/cron.hourly/logrotate', 'src': 'etc/cron.hourly/logrotate.j2', 'mode': '555'})
ok: [localhost] => (item={'dest': '/etc/logrotate.d/hourly/tracking.log', 'src': 'etc/logrotate.d/hourly/edx_logrotate_tracking_log.j2'})

TASK: [common | restart rsyslogd] ********************************************* 
skipping: [localhost]

TASK: [vhost | Copy the templates to their respestive destination] ************ 
changed: [localhost] => (item={'dest': '/etc/motd.tail', 'src': u'etc/devstack_motd.tail.j2', 'mode': '755'})
changed: [localhost] => (item={'dest': '/etc/ssh/sshd_config', 'src': 'etc/ssh/sshd_config.j2'})

TASK: [vhost | restart ssh] *************************************************** 
changed: [localhost]

TASK: [supervisor | create application user] ********************************** 
ok: [localhost]

TASK: [supervisor | create supervisor service user] *************************** 
ok: [localhost]

TASK: [supervisor | create supervisor directories] **************************** 
ok: [localhost] => (item=/edx/app/supervisor)
changed: [localhost] => (item=/edx/app/supervisor/venvs/supervisor)

TASK: [supervisor | create service user accessible dirs] ********************** 
ok: [localhost] => (item=/edx/app/supervisor/conf.d)
ok: [localhost] => (item=/edx/app/supervisor/conf.available.d)

TASK: [supervisor | create supervisor directories] **************************** 
ok: [localhost] => (item=/edx/var/supervisor)
ok: [localhost] => (item=/edx/var/log/supervisor)

TASK: [supervisor | install supervisor in its venv] *************************** 
changed: [localhost]

TASK: [supervisor | install supervisor in its venv] *************************** 
changed: [localhost] => (item=boto=="2.34.0")
changed: [localhost] => (item=python-simple-hipchat)

TASK: [supervisor | create supervisor upstart job] **************************** 
changed: [localhost]

TASK: [supervisor | create pre_supervisor upstart job] ************************ 
ok: [localhost]

TASK: [supervisor | write the pre_suprevisor python script] ******************* 
ok: [localhost]

TASK: [supervisor | create supervisor master config] ************************** 
ok: [localhost]

TASK: [supervisor | create a symlink for supervisortctl] ********************** 
changed: [localhost]

TASK: [supervisor | create a symlink for supervisor cfg] ********************** 
ok: [localhost] => (item=/edx/app/supervisor/supervisord.conf)
ok: [localhost] => (item=/edx/app/supervisor/conf.d)

TASK: [supervisor | create helper script for running supervisor] ************** 
changed: [localhost]

TASK: [supervisor | start supervisor] ***************************************** 
ok: [localhost]

TASK: [supervisor | wait for web port to be available] ************************ 
skipping: [localhost]

TASK: [supervisor | update supervisor configuration] ************************** 
ok: [localhost]

TASK: [edxapp_common | Install system packages] ******************************* 
ok: [localhost]

TASK: [rbenv | fail rbenv_user required for role] ***************************** 
skipping: [localhost]

TASK: [rbenv | fail rbenv_dir required for role] ****************************** 
skipping: [localhost]

TASK: [rbenv | fail rbenv_ruby_version required for role] ********************* 
skipping: [localhost]

TASK: [rbenv | create rbenv user {{ edxapp_user }}] *************************** 
ok: [localhost]

TASK: [rbenv | create rbenv dir if it does not exist] ************************* 
ok: [localhost]

TASK: [rbenv | install build depends] ***************************************** 
ok: [localhost] => (item=curl,build-essential,libcurl4-openssl-dev,libreadline-dev,libssl-dev,libxml2-dev,libxslt1-dev,zlib1g-dev)

TASK: [rbenv | update rbenv repo] ********************************************* 
ok: [localhost]

TASK: [rbenv | ensure ruby_env exists] **************************************** 
ok: [localhost]

TASK: [rbenv | check ruby-build installed] ************************************ 
changed: [localhost]

TASK: [rbenv | if ruby-build exists, which versions we can install] *********** 
changed: [localhost]

TASK: [rbenv | create temporary directory] ************************************ 
changed: [localhost]

TASK: [rbenv | clone ruby-build repo] ***************************************** 
changed: [localhost]

TASK: [rbenv | install ruby-build] ******************************************** 
changed: [localhost]

TASK: [rbenv | remove temporary directory] ************************************ 
changed: [localhost]

TASK: [rbenv | check ruby {{ edxapp_ruby_version }} installed] **************** 
changed: [localhost]

TASK: [rbenv | install ruby {{ edxapp_ruby_version }}] ************************ 
skipping: [localhost]

TASK: [rbenv | set global ruby {{ edxapp_ruby_version }}] ********************* 
changed: [localhost]

TASK: [rbenv | install bundler] *********************************************** 
changed: [localhost]

TASK: [rbenv | remove rbenv version of rake] ********************************** 
ok: [localhost]

TASK: [rbenv | install rake gem] ********************************************** 
changed: [localhost]

TASK: [rbenv | rehash] ******************************************************** 
changed: [localhost]

TASK: [supervisor | create application user] ********************************** 
ok: [localhost]

TASK: [supervisor | create supervisor service user] *************************** 
ok: [localhost]

TASK: [supervisor | create supervisor directories] **************************** 
ok: [localhost] => (item=/edx/app/devpi/supervisor)
changed: [localhost] => (item=/edx/app/devpi/venvs/supervisor)

TASK: [supervisor | create service user accessible dirs] ********************** 
ok: [localhost] => (item=/edx/app/devpi/supervisor/conf.d)
ok: [localhost] => (item=/edx/app/devpi/supervisor/conf.available.d)

TASK: [supervisor | create supervisor directories] **************************** 
ok: [localhost] => (item=/edx/var/devpi/supervisor)
ok: [localhost] => (item=/edx/var/log/devpi/supervisor)

TASK: [supervisor | install supervisor in its venv] *************************** 
changed: [localhost]

TASK: [supervisor | install supervisor in its venv] *************************** 
changed: [localhost] => (item=boto=="2.34.0")
changed: [localhost] => (item=python-simple-hipchat)

TASK: [supervisor | create supervisor upstart job] **************************** 
changed: [localhost]

TASK: [supervisor | create pre_supervisor upstart job] ************************ 
skipping: [localhost]

TASK: [supervisor | write the pre_suprevisor python script] ******************* 
ok: [localhost]

TASK: [supervisor | create supervisor master config] ************************** 
ok: [localhost]

TASK: [supervisor | create a symlink for supervisortctl] ********************** 
skipping: [localhost]

TASK: [supervisor | create a symlink for supervisor cfg] ********************** 
skipping: [localhost] => (item=/edx/app/devpi/supervisor/supervisord.conf)
skipping: [localhost] => (item=/edx/app/devpi/supervisor/conf.d)

TASK: [supervisor | create helper script for running supervisor] ************** 
skipping: [localhost]

TASK: [supervisor | start supervisor] ***************************************** 
ok: [localhost]

TASK: [supervisor | wait for web port to be available] ************************ 
skipping: [localhost]

TASK: [supervisor | update supervisor configuration] ************************** 
ok: [localhost]

TASK: [devpi | create devpi user] ********************************************* 
ok: [localhost]

TASK: [devpi | create devpi application directories] ************************** 
ok: [localhost] => (item=/edx/app/devpi)
changed: [localhost] => (item=/edx/app/devpi/venvs/devpi)

TASK: [devpi | create the devpi data directory, needs write access by the service user] *** 
ok: [localhost] => (item=/edx/var/devpi)
ok: [localhost] => (item=/edx/var/devpi/data)

TASK: [devpi | install devpi pip pkgs] **************************************** 
changed: [localhost] => (item=devpi-server)
changed: [localhost] => (item=eventlet)

TASK: [devpi | writing supervisor script] ************************************* 
ok: [localhost]

TASK: [devpi | create a symlink for venv python, pip] ************************* 
ok: [localhost] => (item=python)
ok: [localhost] => (item=pip)

TASK: [devpi | create a symlink for venv supervisor] ************************** 
ok: [localhost]

TASK: [devpi | create a symlink for supervisor config] ************************ 
ok: [localhost]

TASK: [devpi | update devpi supervisor configuration] ************************* 
ok: [localhost]

TASK: [devpi | ensure devpi is started] *************************************** 
ok: [localhost]

TASK: [nltk | Install unzip] ************************************************** 
ok: [localhost]

TASK: [nltk | create the nltk data directory and subdirectories] ************** 
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/taggers/maxent_treebank_pos_tagger.zip', 'path': 'taggers/maxent_treebank_pos_tagger'})
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/stopwords.zip', 'path': 'corpora/stopwords'})
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/wordnet.zip', 'path': 'corpora/wordnet'})

TASK: [nltk | download nltk data] ********************************************* 
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/taggers/maxent_treebank_pos_tagger.zip', 'path': 'taggers/maxent_treebank_pos_tagger'})
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/stopwords.zip', 'path': 'corpora/stopwords'})
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/wordnet.zip', 'path': 'corpora/wordnet'})

TASK: [nltk | unarchive nltk data] ******************************************** 
skipping: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/taggers/maxent_treebank_pos_tagger.zip', 'path': 'taggers/maxent_treebank_pos_tagger'})
skipping: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/stopwords.zip', 'path': 'corpora/stopwords'})
skipping: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/wordnet.zip', 'path': 'corpora/wordnet'})

TASK: [user | debug var=user_info] ******************************************** 
skipping: [localhost]

TASK: [user | create the edxadmin group] ************************************** 
skipping: [localhost]

TASK: [user | Install role-independent useful system packages] **************** 
skipping: [localhost]

TASK: [user | ensure sudoers.d is read] *************************************** 
skipping: [localhost]

TASK: [user | grant full sudo access to the edxadmin group] ******************* 
skipping: [localhost]

TASK: [user | create the users] *********************************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create .ssh directory] ****************************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | assign admin role to admin users] ******************************* 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | get github key[s]] ********************************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | update the authorized_keys file] ******************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create bashrc file for normal users] **************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create .profile for all users] ********************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | modify shell for restricted users] ****************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create bashrc file for restricted users] ************************ 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create sudoers file from template] ****************************** 
skipping: [localhost]

TASK: [user | change home directory ownership to root for restricted users] *** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create ~/bin directory] ***************************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create allowed command links] *********************************** 
skipping: [localhost] => (item=[{'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []}, '/usr/bin/sudo'])

TASK: [edxapp | create application user] ************************************** 
ok: [localhost]

TASK: [edxapp | create edxapp user dirs] ************************************** 
ok: [localhost] => (item=/edx/app/edxapp)
ok: [localhost] => (item=/edx/app/edxapp/.ssh)
ok: [localhost] => (item=/edx/app/edxapp/venvs)
ok: [localhost] => (item=/edx/var/edxapp/themes)
ok: [localhost] => (item=/edx/var/edxapp/staticfiles)
ok: [localhost] => (item=/edx/var/edxapp/course_static)
changed: [localhost] => (item=/edx/var/edxapp/data)

TASK: [edxapp | create edxapp var dir] **************************************** 
ok: [localhost]

TASK: [edxapp | create directory to import the courses from github] *********** 
ok: [localhost]

TASK: [edxapp | make the course data dir] ************************************* 
ok: [localhost]

TASK: [edxapp | create edxapp log dir] **************************************** 
ok: [localhost]

TASK: [edxapp | create web-writable edxapp data dirs] ************************* 
changed: [localhost] => (item=/edx/var/edxapp/data)
ok: [localhost] => (item=/edx/var/edxapp/uploads)
ok: [localhost] => (item=/edx/var/edxapp/media)

TASK: [edxapp | add ppas for current versions of nodejs] ********************** 
ok: [localhost]

TASK: [edxapp | install system packages on which LMS and CMS rely] ************ 
ok: [localhost]

TASK: [edxapp | set up edxapp .npmrc] ***************************************** 
changed: [localhost]

TASK: [edxapp | create log directories for service variants] ****************** 
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK: [edxapp | code sandbox | Use libblas for 3gf] *************************** 
changed: [localhost]

TASK: [edxapp | code sandbox | Use liblapac for 3gf] ************************** 
changed: [localhost]

TASK: [edxapp | setup the edxapp env] ***************************************** 
ok: [localhost]

TASK: [edxapp | create edxapp configuration dir] ****************************** 
ok: [localhost]

TASK: [edxapp | create ssh script for git (not authenticated)] **************** 
ok: [localhost]

TASK: [edxapp | create ssh script for git (authenticated)] ******************** 
skipping: [localhost]

TASK: [edxapp | install read-only ssh key] ************************************ 
skipping: [localhost]

TASK: [edxapp | set git fetch.prune to ignore deleted remote refs] ************ 
changed: [localhost]

TASK: [edxapp | checkout edx-platform repo into {{ edxapp_code_dir }}] ******** 
changed: [localhost]

TASK: [edxapp | git clean after checking out edx-platform] ******************** 
changed: [localhost]

TASK: [edxapp | checkout theme] *********************************************** 
skipping: [localhost]

TASK: [edxapp | Stat each requirements file with Github URLs to ensure it exists] *** 
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/pre.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/github.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/custom.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/base.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/post.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/paver.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/edx-private.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/post.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/local.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt)

TASK: [edxapp | Updating requirement files for git mirror] ******************** 
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/pre.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/pre.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350637.7500618, 'inode': 902458, 'isgid': False, 'size': 562, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/pre.txt', 'xusr': False, 'atime': 1470350637.7500618, 'md5': '631200b444bce0c9b6dbe83e8f3433ed', 'isdir': False, 'ctime': 1470350637.7500618, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': 'fabbc6bc08c2c9efd4fbc1149fb085539f3c9e70', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/github.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/github.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350637.7500618, 'inode': 901188, 'isgid': False, 'size': 5010, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/github.txt', 'xusr': False, 'atime': 1470350637.7500618, 'md5': '5f721448e1a0250eb74ef31c00c2cd51', 'isdir': False, 'ctime': 1470350637.7500618, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '1b3a2d12a8d5606e5d63e3c0a45ffecaa957b56f', 'islnk': False}, 'changed': False})
skipping: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/custom.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/custom.txt', 'stat': {'exists': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/base.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350637.7500618, 'inode': 901191, 'isgid': False, 'size': 3068, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/base.txt', 'xusr': False, 'atime': 1470350637.7500618, 'md5': '0a7cd81ad538dd0ad58557eb93d2fb88', 'isdir': False, 'ctime': 1470350637.7500618, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '4b7d94a3d4d585ea46f4a0830b7255e602f95e4c', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/post.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/post.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350637.7500618, 'inode': 901164, 'isgid': False, 'size': 569, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/post.txt', 'xusr': False, 'atime': 1470350637.7500618, 'md5': 'ccf97c16c894b54dc2895668818a00df', 'isdir': False, 'ctime': 1470350637.7500618, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': 'bce375fe85376a9aeb7f886e6b7202c2101004d5', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/paver.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/paver.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470348845.6647627, 'inode': 901122, 'isgid': False, 'size': 111, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/paver.txt', 'xusr': False, 'atime': 1470348855.6885908, 'md5': '3b1b66700c2ceb14b6e58faded01bffb', 'isdir': False, 'ctime': 1470348845.6647627, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '54252af609d183b23456f5062bc5505c75ecb942', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/edx-private.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/edx-private.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350637.7500618, 'inode': 901196, 'isgid': False, 'size': 1641, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/edx-private.txt', 'xusr': False, 'atime': 1470350637.7500618, 'md5': '7d116677b5d8556c81b1a5d0b20b5181', 'isdir': False, 'ctime': 1470350637.7500618, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '94e5f1e7105491eedb43806ab2584cfa7fabcd0e', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx-sandbox/post.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx-sandbox/post.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470348845.8567593, 'inode': 901292, 'isgid': False, 'size': 313, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx-sandbox/post.txt', 'xusr': False, 'atime': 1470350632.7381477, 'md5': '1f8d2ca7aa01706f2859c25b8bede5f3', 'isdir': False, 'ctime': 1470348845.8567593, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': 'cb294b185d8f40e49506c4c342acc8fd6b3683f6', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx-sandbox/local.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx-sandbox/local.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470348845.9807572, 'inode': 900855, 'isgid': False, 'size': 507, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx-sandbox/local.txt', 'xusr': False, 'atime': 1470350632.7381477, 'md5': '09046a50cef36e7ca9f622fd3b3b397f', 'isdir': False, 'ctime': 1470348845.9807572, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '01e96ac6feaff75b076e04cbdb2b9b9a632a7034', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350637.7500618, 'inode': 901294, 'isgid': False, 'size': 430, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt', 'xusr': False, 'atime': 1470350637.7500618, 'md5': 'a9e3d33a36e6dd36863bd039478b06a9', 'isdir': False, 'ctime': 1470350637.7500618, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': 'e029ed4816c4e5d3c23609e91541be4abcaefa96', 'islnk': False}, 'changed': False})

TASK: [edxapp | gem install bundler] ****************************************** 
changed: [localhost]

TASK: [edxapp | bundle install] *********************************************** 
changed: [localhost]

TASK: [edxapp | Set the npm registry] ***************************************** 
ok: [localhost]

TASK: [edxapp | Set the npm registry permissions] ***************************** 
changed: [localhost]

TASK: [edxapp | Install edx-platform npm dependencies] ************************ 
changed: [localhost]

TASK: [edxapp | Create the virtualenv to install the Python requirements] ***** 
changed: [localhost]

TASK: [edxapp | Stat each Python requirements file to ensure it exists] ******* 
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/pre.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/github.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/custom.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/local.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/base.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/post.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/paver.txt)

TASK: [edxapp | install python requirements] ********************************** 
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/pre.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/pre.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350639.4620323, 'inode': 902464, 'isgid': False, 'size': 562, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/pre.txt', 'xusr': False, 'atime': 1470350639.4580324, 'md5': '631200b444bce0c9b6dbe83e8f3433ed', 'isdir': False, 'ctime': 1470350639.4620323, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': 'fabbc6bc08c2c9efd4fbc1149fb085539f3c9e70', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/github.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/github.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350639.61003, 'inode': 902458, 'isgid': False, 'size': 5010, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/github.txt', 'xusr': False, 'atime': 1470350639.61003, 'md5': '5f721448e1a0250eb74ef31c00c2cd51', 'isdir': False, 'ctime': 1470350639.61003, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '1b3a2d12a8d5606e5d63e3c0a45ffecaa957b56f', 'islnk': False}, 'changed': False})
skipping: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/custom.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/custom.txt', 'stat': {'exists': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/local.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/local.txt', 'stat': {'uid': 0, 'exists': True, 'woth': False, 'mtime': 1469570431.9602737, 'inode': 902584, 'isgid': False, 'size': 254, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'root', 'gid': 0, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'root', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/local.txt', 'xusr': False, 'atime': 1470330505.3892481, 'md5': '55ace0c3ccdb0b161709e8c7623be39e', 'isdir': False, 'ctime': 1469570431.9602737, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '108dd87a867bcb78ca0e0797122bb07c870157bc', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/base.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350639.7500274, 'inode': 901188, 'isgid': False, 'size': 3068, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/base.txt', 'xusr': False, 'atime': 1470350639.7500274, 'md5': '0a7cd81ad538dd0ad58557eb93d2fb88', 'isdir': False, 'ctime': 1470350639.7500274, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '4b7d94a3d4d585ea46f4a0830b7255e602f95e4c', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/post.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/post.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350639.8820252, 'inode': 901191, 'isgid': False, 'size': 569, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/post.txt', 'xusr': False, 'atime': 1470350639.8820252, 'md5': 'ccf97c16c894b54dc2895668818a00df', 'isdir': False, 'ctime': 1470350639.8820252, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': 'bce375fe85376a9aeb7f886e6b7202c2101004d5', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/paver.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/paver.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350640.0500224, 'inode': 901164, 'isgid': False, 'size': 111, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/paver.txt', 'xusr': False, 'atime': 1470350640.0500224, 'md5': '3b1b66700c2ceb14b6e58faded01bffb', 'isdir': False, 'ctime': 1470350640.0500224, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '54252af609d183b23456f5062bc5505c75ecb942', 'islnk': False}, 'changed': False})

TASK: [edxapp | install python private requirements] ************************** 
skipping: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/edx-private.txt)

TASK: [edxapp | install python extra requirements] **************************** 
skipping: [localhost]

TASK: [edxapp | install CAS attribute module] ********************************* 
skipping: [localhost]

TASK: [edxapp | install sandbox requirements into regular venv] *************** 
skipping: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt)
skipping: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/local.txt)
skipping: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/post.txt)

TASK: [edxapp | compiling all py files in the edx-platform repo] ************** 
changed: [localhost]

TASK: [edxapp | give other read permissions to the virtualenv] **************** 
changed: [localhost]

TASK: [edxapp | openid workaround] ******************************************** 
changed: [localhost]

TASK: [edxapp | create {{ item }} application config] ************************* 
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK: [edxapp | create {{ item }} auth file] ********************************** 
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK: [edxapp | create {{ item }} yaml application config] ******************** 
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK: [edxapp | create {{ item }} yaml auth file] ***************************** 
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK: [edxapp | writing {{ item }} supervisor script] ************************* 
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK: [edxapp | writing edxapp supervisor script] ***************************** 
ok: [localhost]

TASK: [edxapp | add gunicorn configuration files] ***************************** 
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK: [edxapp | writing celery worker supervisor script] ********************** 
ok: [localhost]

TASK: [edxapp | enable {{ item }} supervisor script] ************************** 
skipping: [localhost] => (item=lms)
skipping: [localhost] => (item=cms)

TASK: [edxapp | enable edxapp supervisor script] ****************************** 
skipping: [localhost]

TASK: [edxapp | enable celery worker supervisor script] *********************** 
skipping: [localhost]

TASK: [edxapp | create helper scripts for managing edxapp] ******************** 
ok: [localhost] => (item=['edxapp-migrate', 'lms'])
ok: [localhost] => (item=['edxapp-migrate', 'cms'])
ok: [localhost] => (item=['edxapp-runserver', 'lms'])
ok: [localhost] => (item=['edxapp-runserver', 'cms'])
ok: [localhost] => (item=['edxapp-syncdb', 'lms'])
ok: [localhost] => (item=['edxapp-syncdb', 'cms'])
ok: [localhost] => (item=['edxapp-update-assets', 'lms'])
ok: [localhost] => (item=['edxapp-update-assets', 'cms'])
ok: [localhost] => (item=['edxapp-shell', 'lms'])
ok: [localhost] => (item=['edxapp-shell', 'cms'])

TASK: [edxapp | migrate] ****************************************************** 
skipping: [localhost] => (item=lms)
skipping: [localhost] => (item=cms)

TASK: [edxapp | gather {{ item }} static assets with paver] ******************* 
changed: [localhost] => (item=lms)
changed: [localhost] => (item=cms)

TASK: [edxapp | update supervisor configuration] ****************************** 
skipping: [localhost]

TASK: [edxapp | ensure edxapp has started] ************************************ 
skipping: [localhost] => (item=lms)
skipping: [localhost] => (item=cms)

TASK: [edxapp | ensure edxapp_workers has started] **************************** 
skipping: [localhost] => (item={'queue': 'low', 'service_variant': 'cms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'default', 'service_variant': 'cms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'high', 'service_variant': 'cms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'low', 'service_variant': 'lms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'default', 'service_variant': 'lms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'high', 'service_variant': 'lms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'high_mem', 'service_variant': 'lms', 'monitor': False, 'concurrency': 1, 'max_tasks_per_child': 1})

TASK: [edxapp | create symlinks from the venv bin dir] ************************ 
ok: [localhost] => (item=python)
ok: [localhost] => (item=pip)
ok: [localhost] => (item=django-admin.py)

TASK: [edxapp | create symlinks from the repo dir] **************************** 
ok: [localhost] => (item=manage.py)

TASK: [edxapp | remove read-only ssh key] ************************************* 
skipping: [localhost]

TASK: [edxapp | get instance information] ************************************* 
skipping: [localhost]

TASK: [edxapp | tag instance with edx_platform version] *********************** 
skipping: [localhost]

TASK: [edxapp | tag instance  with edxapp theme version] ********************** 
skipping: [localhost]

TASK: [edxapp | set_fact edxapp_installed=true] ******************************* 
ok: [localhost]

TASK: [edxapp | restart edxapp] *********************************************** 
skipping: [localhost] => (item=lms)
skipping: [localhost] => (item=cms)

TASK: [edxapp | restart edxapp_workers] *************************************** 
skipping: [localhost] => (item={'queue': 'low', 'service_variant': 'cms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'default', 'service_variant': 'cms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'high', 'service_variant': 'cms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'low', 'service_variant': 'lms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'default', 'service_variant': 'lms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'high', 'service_variant': 'lms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'high_mem', 'service_variant': 'lms', 'monitor': False, 'concurrency': 1, 'max_tasks_per_child': 1})

TASK: [xqueue | create application user] ************************************** 
ok: [localhost]

TASK: [xqueue | create xqueue app and venv dir] ******************************* 
ok: [localhost] => (item=/edx/app/xqueue)
ok: [localhost] => (item=/edx/app/xqueue/venvs)

TASK: [xqueue | install a bunch of system packages on which xqueue relies] **** 
ok: [localhost]

TASK: [xqueue | writing supervisor scripts - xqueue, xqueue consumer] ********* 
ok: [localhost] => (item=xqueue)
ok: [localhost] => (item=xqueue_consumer)

TASK: [xqueue | enabling supervisor scripts - xqueue, xqueue consumer] ******** 
skipping: [localhost] => (item=xqueue)
skipping: [localhost] => (item=xqueue_consumer)

TASK: [xqueue | add gunicorn configuration file] ****************************** 
ok: [localhost]

TASK: [xqueue | create xqueue application config] ***************************** 
ok: [localhost]

TASK: [xqueue | create xqueue auth file] ************************************** 
ok: [localhost]

TASK: [xqueue | git checkout xqueue repo into xqueue_code_dir] **************** 
changed: [localhost]

TASK: [xqueue | install python pre-requirements] ****************************** 
changed: [localhost]

TASK: [xqueue | install python post-requirements] ***************************** 
changed: [localhost]

TASK: [xqueue | migrate] ****************************************************** 
skipping: [localhost]

TASK: [xqueue | create users] ************************************************* 
changed: [localhost]

TASK: [xqueue | update supervisor configuration] ****************************** 
skipping: [localhost]

TASK: [xqueue | ensure xqueue, consumer is running] *************************** 
skipping: [localhost] => (item=xqueue)
skipping: [localhost] => (item=xqueue_consumer)

TASK: [xqueue | create a symlink for venv python] ***************************** 
ok: [localhost] => (item=python)
ok: [localhost] => (item=pip)

TASK: [xqueue | restart xqueue] *********************************************** 
skipping: [localhost] => (item=xqueue)
skipping: [localhost] => (item=xqueue_consumer)

NOTIFIED: [devpi | restart devpi] ********************************************* 
changed: [localhost]

PLAY RECAP ******************************************************************** 
localhost                  : ok=174  changed=52   unreachable=0    failed=0   

We're at /tmp/tmp.Um2GfQ0IGZ
 !!!CHECKPOINT 2 !!!
New python executable in venv/bin/python
Installing setuptools, pip, wheel...done.
Requirement already satisfied (use --upgrade to upgrade): pip==7.1.2 in ./venv/lib/python2.7/site-packages (from -r configuration/pre-requirements.txt (line 1))
Collecting ansible==1.9.3-edx from git+https://github.com/edx/ansible.git@stable-1.9.3-rc1-edx#egg=ansible==1.9.3-edx (from -r configuration/requirements.txt (line 1))
  Cloning https://github.com/edx/ansible.git (to stable-1.9.3-rc1-edx) to /tmp/pip-build-7sY2jo/ansible
Collecting PyYAML==3.11 (from -r configuration/requirements.txt (line 2))
Collecting Jinja2==2.7.3 (from -r configuration/requirements.txt (line 3))
Collecting MarkupSafe==0.23 (from -r configuration/requirements.txt (line 4))
Collecting boto==2.32.1 (from -r configuration/requirements.txt (line 5))
  Using cached boto-2.32.1-py2.py3-none-any.whl
Collecting ecdsa==0.11 (from -r configuration/requirements.txt (line 6))
Collecting paramiko==1.15.1 (from -r configuration/requirements.txt (line 7))
  Using cached paramiko-1.15.1-py2.py3-none-any.whl
Collecting pycrypto==2.6.1 (from -r configuration/requirements.txt (line 8))
Requirement already satisfied (use --upgrade to upgrade): wsgiref==0.1.2 in /usr/lib/python2.7 (from -r configuration/requirements.txt (line 9))
Collecting docopt==0.6.1 (from -r configuration/requirements.txt (line 10))
Collecting python-simple-hipchat==0.2 (from -r configuration/requirements.txt (line 11))
Collecting prettytable==0.7.2 (from -r configuration/requirements.txt (line 12))
Collecting awscli==1.4.2 (from -r configuration/requirements.txt (line 13))
Collecting requests (from -r configuration/requirements.txt (line 14))
  Using cached requests-2.10.0-py2.py3-none-any.whl
Collecting datadog==0.8.0 (from -r configuration/requirements.txt (line 15))
Collecting pymongo==3.1 (from -r configuration/requirements.txt (line 16))
Collecting MySQL-python==1.2.5 (from -r configuration/requirements.txt (line 17))
Requirement already satisfied (use --upgrade to upgrade): setuptools in ./venv/lib/python2.7/site-packages (from ansible==1.9.3-edx->-r configuration/requirements.txt (line 1))
Collecting rsa==3.1.2 (from awscli==1.4.2->-r configuration/requirements.txt (line 13))
Collecting docutils>=0.10 (from awscli==1.4.2->-r configuration/requirements.txt (line 13))
Collecting six>=1.1.0 (from awscli==1.4.2->-r configuration/requirements.txt (line 13))
  Using cached six-1.10.0-py2.py3-none-any.whl
Collecting botocore<0.63.0,>=0.62.0 (from awscli==1.4.2->-r configuration/requirements.txt (line 13))
Collecting colorama==0.2.5 (from awscli==1.4.2->-r configuration/requirements.txt (line 13))
Collecting bcdoc<0.13.0,>=0.12.0 (from awscli==1.4.2->-r configuration/requirements.txt (line 13))
Collecting simplejson>=2.0.9 (from datadog==0.8.0->-r configuration/requirements.txt (line 15))
Collecting decorator>=3.3.2 (from datadog==0.8.0->-r configuration/requirements.txt (line 15))
  Using cached decorator-4.0.10-py2.py3-none-any.whl
Collecting pyasn1>=0.1.3 (from rsa==3.1.2->awscli==1.4.2->-r configuration/requirements.txt (line 13))
  Using cached pyasn1-0.1.9-py2.py3-none-any.whl
Collecting jmespath==0.4.1 (from botocore<0.63.0,>=0.62.0->awscli==1.4.2->-r configuration/requirements.txt (line 13))
Collecting python-dateutil>=2.1 (from botocore<0.63.0,>=0.62.0->awscli==1.4.2->-r configuration/requirements.txt (line 13))
  Using cached python_dateutil-2.5.3-py2.py3-none-any.whl
Installing collected packages: ecdsa, pycrypto, paramiko, MarkupSafe, Jinja2, PyYAML, ansible, boto, docopt, python-simple-hipchat, prettytable, pyasn1, rsa, docutils, six, jmespath, python-dateutil, botocore, colorama, bcdoc, awscli, requests, simplejson, decorator, datadog, pymongo, MySQL-python
  Running setup.py install for ansible
Successfully installed Jinja2-2.7.3 MarkupSafe-0.23 MySQL-python-1.2.5 PyYAML-3.11 ansible-1.9.3-edx awscli-1.4.2 bcdoc-0.12.2 boto-2.32.1 botocore-0.62.0 colorama-0.2.5 datadog-0.8.0 decorator-4.0.10 docopt-0.6.1 docutils-0.12 ecdsa-0.11 jmespath-0.4.1 paramiko-1.15.1 prettytable-0.7.2 pyasn1-0.1.9 pycrypto-2.6.1 pymongo-3.1 python-dateutil-2.5.3 python-simple-hipchat-0.2 requests-2.10.0 rsa-3.1.2 simplejson-3.8.2 six-1.10.0
The directory '/root/.cache/pip/log' or its parent directory is not owned by the current user and the debug log has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want the -H flag.
The directory '/root/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want the -H flag.
You are using pip version 6.0.8, however version 8.1.2 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
The directory '/root/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want the -H flag.
Uninstalling South-1.0.1:
  Successfully uninstalled South-1.0.1
Upgrading to the beginning of Django 1.8
We're at /tmp/tmp.Um2GfQ0IGZ/configuration/playbooks/vagrant

PLAY [Update fullstack to a specific intermediate revision] ******************* 

GATHERING FACTS *************************************************************** 
ok: [localhost]

TASK: [user | debug var=user_info] ******************************************** 
ok: [localhost] => {
    "var": {
        "user_info": []
    }
}

TASK: [user | create the edxadmin group] ************************************** 
ok: [localhost]

TASK: [user | Install role-independent useful system packages] **************** 
ok: [localhost] => (item=curl)

TASK: [user | ensure sudoers.d is read] *************************************** 
ok: [localhost]

TASK: [user | grant full sudo access to the edxadmin group] ******************* 
ok: [localhost]

TASK: [user | create the users] *********************************************** 
skipping: [localhost]

TASK: [user | create .ssh directory] ****************************************** 
skipping: [localhost]

TASK: [user | assign admin role to admin users] ******************************* 
skipping: [localhost]

TASK: [user | get github key[s]] ********************************************** 
skipping: [localhost]

TASK: [user | update the authorized_keys file] ******************************** 
skipping: [localhost]

TASK: [user | create bashrc file for normal users] **************************** 
skipping: [localhost]

TASK: [user | create .profile for all users] ********************************** 
skipping: [localhost]

TASK: [user | modify shell for restricted users] ****************************** 
skipping: [localhost]

TASK: [user | create bashrc file for restricted users] ************************ 
skipping: [localhost]

TASK: [user | create sudoers file from template] ****************************** 
ok: [localhost]

TASK: [user | change home directory ownership to root for restricted users] *** 
skipping: [localhost]

TASK: [user | create ~/bin directory] ***************************************** 
skipping: [localhost]

TASK: [user | create allowed command links] *********************************** 
skipping: [localhost]

TASK: [security | install security packages] ********************************** 
skipping: [localhost]

TASK: [security | update all system packages] ********************************* 
skipping: [localhost]

TASK: [security | configure periodic unattended-upgrades] ********************* 
skipping: [localhost]

TASK: [security | disable unattended-upgrades] ******************************** 
skipping: [localhost]

TASK: [security | only unattended-upgrade from security repo] ***************** 
skipping: [localhost]

TASK: [security | disable security only updates on unattended-upgrades] ******* 
skipping: [localhost]

TASK: [security | Check if we are vulnerable] ********************************* 
skipping: [localhost]

TASK: [security | Apply bash security update if we are vulnerable] ************ 
skipping: [localhost]

TASK: [security | Check again and fail if we are still vulnerable] ************ 
skipping: [localhost]

TASK: [security | GHOST.c] **************************************************** 
skipping: [localhost]

TASK: [security | compile GHOST] ********************************************** 
skipping: [localhost]

TASK: [security | Check if we are vulnerable] ********************************* 
skipping: [localhost]

TASK: [security | Apply glibc security update if we are vulnerable] *********** 
skipping: [localhost]

TASK: [common | Update CA Certificates] *************************************** 
changed: [localhost]

TASK: [common | Add user www-data] ******************************************** 
ok: [localhost]

TASK: [common | check if instance is vagrant] ********************************* 
ok: [localhost]

TASK: [common | add edx ppa apt key] ****************************************** 
ok: [localhost]

TASK: [common | Add git apt repository] *************************************** 
ok: [localhost]

TASK: [common | Add edx apt repository] *************************************** 
ok: [localhost]

TASK: [common | Install role-independent useful system packages] ************** 
ok: [localhost] => (item=ntp,lynx-cur,logrotate,rsyslog,git,unzip,python2.7=2.7.10-0+precise1,python-pip,python2.7-dev)

TASK: [common | Create common directories] ************************************ 
ok: [localhost] => (item={'path': u'/edx/var'})
ok: [localhost] => (item={'path': u'/edx/app'})
ok: [localhost] => (item={'path': u'/edx/bin'})
ok: [localhost] => (item={'path': u'/edx/etc'})
ok: [localhost] => (item={'owner': u'syslog', 'path': u'/edx/var/log', 'group': u'syslog'})
ok: [localhost] => (item={'path': '/etc/logrotate.d/hourly'})
ok: [localhost] => (item={'path': '/etc/rsyslog.d/50-default.conf', 'state': 'absent'})

TASK: [common | upload sudo config for key forwarding as root] **************** 
ok: [localhost]

TASK: [common | pip install virtualenv] *************************************** 
ok: [localhost] => (item=pip==7.1.2)
ok: [localhost] => (item=setuptools==18.3.2)
ok: [localhost] => (item=virtualenv==13.1.2)
ok: [localhost] => (item=virtualenvwrapper)

TASK: [common | update /etc/hosts] ******************************************** 
skipping: [localhost]

TASK: [common | update /etc/hostname] ***************************************** 
skipping: [localhost]

TASK: [common | run hostname] ************************************************* 
skipping: [localhost]

TASK: [common | Copy the templates to their respestive destination] *********** 
ok: [localhost] => (item={'dest': '/etc/rsyslog.d/99-edx.conf', 'src': 'edx_rsyslog.j2'})
ok: [localhost] => (item={'dest': '/etc/logrotate.d/hourly/edx-services', 'src': 'etc/logrotate.d/hourly/edx_logrotate.j2'})
ok: [localhost] => (item={'dest': '/etc/cron.hourly/logrotate', 'src': 'etc/cron.hourly/logrotate.j2', 'mode': '555'})
ok: [localhost] => (item={'dest': '/etc/logrotate.d/hourly/tracking.log', 'src': 'etc/logrotate.d/hourly/edx_logrotate_tracking_log.j2'})

TASK: [common | restart rsyslogd] ********************************************* 
skipping: [localhost]

TASK: [server_utils | Install system packages] ******************************** 
ok: [localhost] => (item=ack-grep,mosh,curl,tree,screen,tmux,curl,vim-tiny,dnsutils,inetutils-telnet,netcat)

TASK: [common | Update CA Certificates] *************************************** 
changed: [localhost]

TASK: [common | Add user www-data] ******************************************** 
ok: [localhost]

TASK: [common | check if instance is vagrant] ********************************* 
ok: [localhost]

TASK: [common | add edx ppa apt key] ****************************************** 
ok: [localhost]

TASK: [common | Add git apt repository] *************************************** 
ok: [localhost]

TASK: [common | Add edx apt repository] *************************************** 
ok: [localhost]

TASK: [common | Install role-independent useful system packages] ************** 
ok: [localhost] => (item=ntp,lynx-cur,logrotate,rsyslog,git,unzip,python2.7=2.7.10-0+precise1,python-pip,python2.7-dev)

TASK: [common | Create common directories] ************************************ 
ok: [localhost] => (item={'path': u'/edx/var'})
ok: [localhost] => (item={'path': u'/edx/app'})
ok: [localhost] => (item={'path': u'/edx/bin'})
ok: [localhost] => (item={'path': u'/edx/etc'})
ok: [localhost] => (item={'owner': u'syslog', 'path': u'/edx/var/log', 'group': u'syslog'})
ok: [localhost] => (item={'path': '/etc/logrotate.d/hourly'})
ok: [localhost] => (item={'path': '/etc/rsyslog.d/50-default.conf', 'state': 'absent'})

TASK: [common | upload sudo config for key forwarding as root] **************** 
ok: [localhost]

TASK: [common | pip install virtualenv] *************************************** 
ok: [localhost] => (item=pip==7.1.2)
ok: [localhost] => (item=setuptools==18.3.2)
ok: [localhost] => (item=virtualenv==13.1.2)
ok: [localhost] => (item=virtualenvwrapper)

TASK: [common | update /etc/hosts] ******************************************** 
skipping: [localhost]

TASK: [common | update /etc/hostname] ***************************************** 
skipping: [localhost]

TASK: [common | run hostname] ************************************************* 
skipping: [localhost]

TASK: [common | Copy the templates to their respestive destination] *********** 
ok: [localhost] => (item={'dest': '/etc/rsyslog.d/99-edx.conf', 'src': 'edx_rsyslog.j2'})
ok: [localhost] => (item={'dest': '/etc/logrotate.d/hourly/edx-services', 'src': 'etc/logrotate.d/hourly/edx_logrotate.j2'})
ok: [localhost] => (item={'dest': '/etc/cron.hourly/logrotate', 'src': 'etc/cron.hourly/logrotate.j2', 'mode': '555'})
ok: [localhost] => (item={'dest': '/etc/logrotate.d/hourly/tracking.log', 'src': 'etc/logrotate.d/hourly/edx_logrotate_tracking_log.j2'})

TASK: [common | restart rsyslogd] ********************************************* 
skipping: [localhost]

TASK: [vhost | Copy the templates to their respestive destination] ************ 
ok: [localhost] => (item={'dest': '/etc/motd.tail', 'src': u'etc/devstack_motd.tail.j2', 'mode': '755'})
ok: [localhost] => (item={'dest': '/etc/ssh/sshd_config', 'src': 'etc/ssh/sshd_config.j2'})

TASK: [vhost | restart ssh] *************************************************** 
skipping: [localhost]

TASK: [supervisor | create application user] ********************************** 
ok: [localhost]

TASK: [supervisor | create supervisor service user] *************************** 
ok: [localhost]

TASK: [supervisor | create supervisor directories] **************************** 
ok: [localhost] => (item=/edx/app/supervisor)
ok: [localhost] => (item=/edx/app/supervisor/venvs/supervisor)

TASK: [supervisor | create service user accessible dirs] ********************** 
ok: [localhost] => (item=/edx/app/supervisor/conf.d)
ok: [localhost] => (item=/edx/app/supervisor/conf.available.d)

TASK: [supervisor | create supervisor directories] **************************** 
ok: [localhost] => (item=/edx/var/supervisor)
ok: [localhost] => (item=/edx/var/log/supervisor)

TASK: [supervisor | install supervisor in its venv] *************************** 
ok: [localhost]

TASK: [supervisor | install supervisor in its venv] *************************** 
ok: [localhost] => (item=boto=="2.34.0")
ok: [localhost] => (item=python-simple-hipchat)

TASK: [supervisor | create supervisor upstart job] **************************** 
ok: [localhost]

TASK: [supervisor | create pre_supervisor upstart job] ************************ 
ok: [localhost]

TASK: [supervisor | write the pre_suprevisor python script] ******************* 
ok: [localhost]

TASK: [supervisor | create supervisor master config] ************************** 
ok: [localhost]

TASK: [supervisor | create a symlink for supervisortctl] ********************** 
changed: [localhost]

TASK: [supervisor | create a symlink for supervisor cfg] ********************** 
ok: [localhost] => (item=/edx/app/supervisor/supervisord.conf)
ok: [localhost] => (item=/edx/app/supervisor/conf.d)

TASK: [supervisor | create helper script for running supervisor] ************** 
changed: [localhost]

TASK: [supervisor | start supervisor] ***************************************** 
ok: [localhost]

TASK: [supervisor | wait for web port to be available] ************************ 
skipping: [localhost]

TASK: [supervisor | update supervisor configuration] ************************** 
ok: [localhost]

TASK: [edxapp_common | Install system packages] ******************************* 
ok: [localhost]

TASK: [rbenv | fail rbenv_user required for role] ***************************** 
skipping: [localhost]

TASK: [rbenv | fail rbenv_dir required for role] ****************************** 
skipping: [localhost]

TASK: [rbenv | fail rbenv_ruby_version required for role] ********************* 
skipping: [localhost]

TASK: [rbenv | create rbenv user {{ edxapp_user }}] *************************** 
ok: [localhost]

TASK: [rbenv | create rbenv dir if it does not exist] ************************* 
ok: [localhost]

TASK: [rbenv | install build depends] ***************************************** 
ok: [localhost] => (item=curl,build-essential,libcurl4-openssl-dev,libreadline-dev,libssl-dev,libxml2-dev,libxslt1-dev,zlib1g-dev)

TASK: [rbenv | update rbenv repo] ********************************************* 
ok: [localhost]

TASK: [rbenv | ensure ruby_env exists] **************************************** 
ok: [localhost]

TASK: [rbenv | check ruby-build installed] ************************************ 
changed: [localhost]

TASK: [rbenv | if ruby-build exists, which versions we can install] *********** 
changed: [localhost]

TASK: [rbenv | create temporary directory] ************************************ 
changed: [localhost]

TASK: [rbenv | clone ruby-build repo] ***************************************** 
changed: [localhost]

TASK: [rbenv | install ruby-build] ******************************************** 
changed: [localhost]

TASK: [rbenv | remove temporary directory] ************************************ 
changed: [localhost]

TASK: [rbenv | check ruby {{ edxapp_ruby_version }} installed] **************** 
changed: [localhost]

TASK: [rbenv | install ruby {{ edxapp_ruby_version }}] ************************ 
skipping: [localhost]

TASK: [rbenv | set global ruby {{ edxapp_ruby_version }}] ********************* 
changed: [localhost]

TASK: [rbenv | install bundler] *********************************************** 
changed: [localhost]

TASK: [rbenv | remove rbenv version of rake] ********************************** 
ok: [localhost]

TASK: [rbenv | install rake gem] ********************************************** 
changed: [localhost]

TASK: [rbenv | rehash] ******************************************************** 
changed: [localhost]

TASK: [supervisor | create application user] ********************************** 
ok: [localhost]

TASK: [supervisor | create supervisor service user] *************************** 
ok: [localhost]

TASK: [supervisor | create supervisor directories] **************************** 
ok: [localhost] => (item=/edx/app/devpi/supervisor)
ok: [localhost] => (item=/edx/app/devpi/venvs/supervisor)

TASK: [supervisor | create service user accessible dirs] ********************** 
ok: [localhost] => (item=/edx/app/devpi/supervisor/conf.d)
ok: [localhost] => (item=/edx/app/devpi/supervisor/conf.available.d)

TASK: [supervisor | create supervisor directories] **************************** 
ok: [localhost] => (item=/edx/var/devpi/supervisor)
ok: [localhost] => (item=/edx/var/log/devpi/supervisor)

TASK: [supervisor | install supervisor in its venv] *************************** 
ok: [localhost]

TASK: [supervisor | install supervisor in its venv] *************************** 
ok: [localhost] => (item=boto=="2.34.0")
ok: [localhost] => (item=python-simple-hipchat)

TASK: [supervisor | create supervisor upstart job] **************************** 
ok: [localhost]

TASK: [supervisor | create pre_supervisor upstart job] ************************ 
skipping: [localhost]

TASK: [supervisor | write the pre_suprevisor python script] ******************* 
ok: [localhost]

TASK: [supervisor | create supervisor master config] ************************** 
ok: [localhost]

TASK: [supervisor | create a symlink for supervisortctl] ********************** 
skipping: [localhost]

TASK: [supervisor | create a symlink for supervisor cfg] ********************** 
skipping: [localhost] => (item=/edx/app/devpi/supervisor/supervisord.conf)
skipping: [localhost] => (item=/edx/app/devpi/supervisor/conf.d)

TASK: [supervisor | create helper script for running supervisor] ************** 
skipping: [localhost]

TASK: [supervisor | start supervisor] ***************************************** 
ok: [localhost]

TASK: [supervisor | wait for web port to be available] ************************ 
skipping: [localhost]

TASK: [supervisor | update supervisor configuration] ************************** 
ok: [localhost]

TASK: [devpi | create devpi user] ********************************************* 
ok: [localhost]

TASK: [devpi | create devpi application directories] ************************** 
ok: [localhost] => (item=/edx/app/devpi)
ok: [localhost] => (item=/edx/app/devpi/venvs/devpi)

TASK: [devpi | create the devpi data directory, needs write access by the service user] *** 
ok: [localhost] => (item=/edx/var/devpi)
ok: [localhost] => (item=/edx/var/devpi/data)

TASK: [devpi | install devpi pip pkgs] **************************************** 
ok: [localhost] => (item=devpi-server)
ok: [localhost] => (item=eventlet)

TASK: [devpi | writing supervisor script] ************************************* 
ok: [localhost]

TASK: [devpi | create a symlink for venv python, pip] ************************* 
ok: [localhost] => (item=python)
ok: [localhost] => (item=pip)

TASK: [devpi | create a symlink for venv supervisor] ************************** 
ok: [localhost]

TASK: [devpi | create a symlink for supervisor config] ************************ 
ok: [localhost]

TASK: [devpi | update devpi supervisor configuration] ************************* 
ok: [localhost]

TASK: [devpi | ensure devpi is started] *************************************** 
ok: [localhost]

TASK: [nltk | Install unzip] ************************************************** 
ok: [localhost]

TASK: [nltk | create the nltk data directory and subdirectories] ************** 
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/taggers/maxent_treebank_pos_tagger.zip', 'path': 'taggers/maxent_treebank_pos_tagger'})
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/stopwords.zip', 'path': 'corpora/stopwords'})
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/wordnet.zip', 'path': 'corpora/wordnet'})

TASK: [nltk | download nltk data] ********************************************* 
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/taggers/maxent_treebank_pos_tagger.zip', 'path': 'taggers/maxent_treebank_pos_tagger'})
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/stopwords.zip', 'path': 'corpora/stopwords'})
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/wordnet.zip', 'path': 'corpora/wordnet'})

TASK: [nltk | unarchive nltk data] ******************************************** 
skipping: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/taggers/maxent_treebank_pos_tagger.zip', 'path': 'taggers/maxent_treebank_pos_tagger'})
skipping: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/stopwords.zip', 'path': 'corpora/stopwords'})
skipping: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/wordnet.zip', 'path': 'corpora/wordnet'})

TASK: [user | debug var=user_info] ******************************************** 
skipping: [localhost]

TASK: [user | create the edxadmin group] ************************************** 
skipping: [localhost]

TASK: [user | Install role-independent useful system packages] **************** 
skipping: [localhost]

TASK: [user | ensure sudoers.d is read] *************************************** 
skipping: [localhost]

TASK: [user | grant full sudo access to the edxadmin group] ******************* 
skipping: [localhost]

TASK: [user | create the users] *********************************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create .ssh directory] ****************************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | assign admin role to admin users] ******************************* 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | get github key[s]] ********************************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | update the authorized_keys file] ******************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create bashrc file for normal users] **************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create .profile for all users] ********************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | modify shell for restricted users] ****************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create bashrc file for restricted users] ************************ 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create sudoers file from template] ****************************** 
skipping: [localhost]

TASK: [user | change home directory ownership to root for restricted users] *** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create ~/bin directory] ***************************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create allowed command links] *********************************** 
skipping: [localhost] => (item=[{'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []}, '/usr/bin/sudo'])

TASK: [edxapp | create application user] ************************************** 
ok: [localhost]

TASK: [edxapp | create edxapp user dirs] ************************************** 
ok: [localhost] => (item=/edx/app/edxapp)
ok: [localhost] => (item=/edx/app/edxapp/.ssh)
ok: [localhost] => (item=/edx/app/edxapp/venvs)
ok: [localhost] => (item=/edx/var/edxapp/themes)
ok: [localhost] => (item=/edx/var/edxapp/staticfiles)
ok: [localhost] => (item=/edx/var/edxapp/course_static)
changed: [localhost] => (item=/edx/var/edxapp/data)

TASK: [edxapp | create edxapp var dir] **************************************** 
ok: [localhost]

TASK: [edxapp | create directory to import the courses from github] *********** 
ok: [localhost]

TASK: [edxapp | make the course data dir] ************************************* 
ok: [localhost]

TASK: [edxapp | create edxapp log dir] **************************************** 
ok: [localhost]

TASK: [edxapp | create web-writable edxapp data dirs] ************************* 
changed: [localhost] => (item=/edx/var/edxapp/data)
ok: [localhost] => (item=/edx/var/edxapp/uploads)
ok: [localhost] => (item=/edx/var/edxapp/media)

TASK: [edxapp | add ppas for current versions of nodejs] ********************** 
ok: [localhost]

TASK: [edxapp | install system packages on which LMS and CMS rely] ************ 
ok: [localhost]

TASK: [edxapp | set up edxapp .npmrc] ***************************************** 
changed: [localhost]

TASK: [edxapp | create log directories for service variants] ****************** 
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK: [edxapp | code sandbox | Use libblas for 3gf] *************************** 
changed: [localhost]

TASK: [edxapp | code sandbox | Use liblapac for 3gf] ************************** 
changed: [localhost]

TASK: [edxapp | setup the edxapp env] ***************************************** 
ok: [localhost]

TASK: [edxapp | create edxapp configuration dir] ****************************** 
ok: [localhost]

TASK: [edxapp | create ssh script for git (not authenticated)] **************** 
ok: [localhost]

TASK: [edxapp | create ssh script for git (authenticated)] ******************** 
skipping: [localhost]

TASK: [edxapp | install read-only ssh key] ************************************ 
skipping: [localhost]

TASK: [edxapp | set git fetch.prune to ignore deleted remote refs] ************ 
changed: [localhost]

TASK: [edxapp | checkout edx-platform repo into {{ edxapp_code_dir }}] ******** 
changed: [localhost]

TASK: [edxapp | git clean after checking out edx-platform] ******************** 
changed: [localhost]

TASK: [edxapp | checkout theme] *********************************************** 
skipping: [localhost]

TASK: [edxapp | Stat each requirements file with Github URLs to ensure it exists] *** 
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/pre.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/github.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/custom.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/base.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/post.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/paver.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/edx-private.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/post.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/local.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt)

TASK: [edxapp | Updating requirement files for git mirror] ******************** 
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/pre.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/pre.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350639.4620323, 'inode': 902464, 'isgid': False, 'size': 562, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/pre.txt', 'xusr': False, 'atime': 1470350648.889871, 'md5': '631200b444bce0c9b6dbe83e8f3433ed', 'isdir': False, 'ctime': 1470350639.4620323, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': 'fabbc6bc08c2c9efd4fbc1149fb085539f3c9e70', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/github.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/github.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470352815.9207578, 'inode': 901188, 'isgid': False, 'size': 4823, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/github.txt', 'xusr': False, 'atime': 1470352815.9167578, 'md5': 'bf4b7eaafeba56ea282dfbf603e66e0f', 'isdir': False, 'ctime': 1470352815.9207578, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '06eb4617bde018824dffad1ab68af0e575c19e3c', 'islnk': False}, 'changed': False})
skipping: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/custom.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/custom.txt', 'stat': {'exists': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/base.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470352815.9167578, 'inode': 901107, 'isgid': False, 'size': 3445, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/base.txt', 'xusr': False, 'atime': 1470352815.9167578, 'md5': 'e0d36bc315aeceb8883f6133d4867f55', 'isdir': False, 'ctime': 1470352815.9167578, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '327fe38d071120f1bf3235980073f242c8ff15f9', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/post.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/post.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350639.8820252, 'inode': 901191, 'isgid': False, 'size': 569, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/post.txt', 'xusr': False, 'atime': 1470350649.4218616, 'md5': 'ccf97c16c894b54dc2895668818a00df', 'isdir': False, 'ctime': 1470350639.8820252, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': 'bce375fe85376a9aeb7f886e6b7202c2101004d5', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/paver.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/paver.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350640.0500224, 'inode': 901164, 'isgid': False, 'size': 111, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/paver.txt', 'xusr': False, 'atime': 1470350649.5058603, 'md5': '3b1b66700c2ceb14b6e58faded01bffb', 'isdir': False, 'ctime': 1470350640.0500224, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '54252af609d183b23456f5062bc5505c75ecb942', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/edx-private.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/edx-private.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350640.1500206, 'inode': 901122, 'isgid': False, 'size': 1641, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/edx-private.txt', 'xusr': False, 'atime': 1470352812.2728202, 'md5': '7d116677b5d8556c81b1a5d0b20b5181', 'isdir': False, 'ctime': 1470350640.1500206, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '94e5f1e7105491eedb43806ab2584cfa7fabcd0e', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx-sandbox/post.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx-sandbox/post.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350640.2540188, 'inode': 901196, 'isgid': False, 'size': 313, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx-sandbox/post.txt', 'xusr': False, 'atime': 1470352812.2728202, 'md5': '1f8d2ca7aa01706f2859c25b8bede5f3', 'isdir': False, 'ctime': 1470350640.2540188, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': 'cb294b185d8f40e49506c4c342acc8fd6b3683f6', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx-sandbox/local.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx-sandbox/local.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350640.3700168, 'inode': 901292, 'isgid': False, 'size': 507, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx-sandbox/local.txt', 'xusr': False, 'atime': 1470352812.2728202, 'md5': '09046a50cef36e7ca9f622fd3b3b397f', 'isdir': False, 'ctime': 1470350640.3700168, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '01e96ac6feaff75b076e04cbdb2b9b9a632a7034', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470350640.538014, 'inode': 900855, 'isgid': False, 'size': 430, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt', 'xusr': False, 'atime': 1470352812.2728202, 'md5': 'a9e3d33a36e6dd36863bd039478b06a9', 'isdir': False, 'ctime': 1470350640.538014, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': 'e029ed4816c4e5d3c23609e91541be4abcaefa96', 'islnk': False}, 'changed': False})

TASK: [edxapp | gem install bundler] ****************************************** 
changed: [localhost]

TASK: [edxapp | bundle install] *********************************************** 
changed: [localhost]

TASK: [edxapp | Set the npm registry] ***************************************** 
ok: [localhost]

TASK: [edxapp | Set the npm registry permissions] ***************************** 
changed: [localhost]

TASK: [edxapp | Install edx-platform npm dependencies] ************************ 
changed: [localhost]

TASK: [edxapp | Create the virtualenv to install the Python requirements] ***** 
ok: [localhost]

TASK: [edxapp | Stat each Python requirements file to ensure it exists] ******* 
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/pre.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/github.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/custom.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/local.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/base.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/post.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/paver.txt)

TASK: [edxapp | install python requirements] ********************************** 
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/pre.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/pre.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470352817.4607315, 'inode': 901189, 'isgid': False, 'size': 562, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/pre.txt', 'xusr': False, 'atime': 1470352817.4607315, 'md5': '631200b444bce0c9b6dbe83e8f3433ed', 'isdir': False, 'ctime': 1470352817.4607315, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': 'fabbc6bc08c2c9efd4fbc1149fb085539f3c9e70', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/github.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/github.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470352817.5687296, 'inode': 901192, 'isgid': False, 'size': 4823, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/github.txt', 'xusr': False, 'atime': 1470352817.5687296, 'md5': 'bf4b7eaafeba56ea282dfbf603e66e0f', 'isdir': False, 'ctime': 1470352817.5687296, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '06eb4617bde018824dffad1ab68af0e575c19e3c', 'islnk': False}, 'changed': False})
skipping: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/custom.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/custom.txt', 'stat': {'exists': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/local.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/local.txt', 'stat': {'uid': 0, 'exists': True, 'woth': False, 'mtime': 1469570431.9602737, 'inode': 902584, 'isgid': False, 'size': 254, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'root', 'gid': 0, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'root', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/local.txt', 'xusr': False, 'atime': 1470330505.3892481, 'md5': '55ace0c3ccdb0b161709e8c7623be39e', 'isdir': False, 'ctime': 1469570431.9602737, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '108dd87a867bcb78ca0e0797122bb07c870157bc', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/base.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470352817.6847277, 'inode': 901188, 'isgid': False, 'size': 3445, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/base.txt', 'xusr': False, 'atime': 1470352817.6847277, 'md5': 'e0d36bc315aeceb8883f6133d4867f55', 'isdir': False, 'ctime': 1470352817.6847277, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '327fe38d071120f1bf3235980073f242c8ff15f9', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/post.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/post.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470352817.8567247, 'inode': 901107, 'isgid': False, 'size': 569, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/post.txt', 'xusr': False, 'atime': 1470352817.8567247, 'md5': 'ccf97c16c894b54dc2895668818a00df', 'isdir': False, 'ctime': 1470352817.8567247, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': 'bce375fe85376a9aeb7f886e6b7202c2101004d5', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/paver.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/paver.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470352818.0007222, 'inode': 901191, 'isgid': False, 'size': 111, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/paver.txt', 'xusr': False, 'atime': 1470352818.0007222, 'md5': '3b1b66700c2ceb14b6e58faded01bffb', 'isdir': False, 'ctime': 1470352818.0007222, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '54252af609d183b23456f5062bc5505c75ecb942', 'islnk': False}, 'changed': False})

TASK: [edxapp | install python private requirements] ************************** 
skipping: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/edx-private.txt)

TASK: [edxapp | install python extra requirements] **************************** 
skipping: [localhost]

TASK: [edxapp | install CAS attribute module] ********************************* 
skipping: [localhost]

TASK: [edxapp | install sandbox requirements into regular venv] *************** 
skipping: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt)
skipping: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/local.txt)
skipping: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/post.txt)

TASK: [edxapp | compiling all py files in the edx-platform repo] ************** 
changed: [localhost]

TASK: [edxapp | give other read permissions to the virtualenv] **************** 
changed: [localhost]

TASK: [edxapp | openid workaround] ******************************************** 
changed: [localhost]

TASK: [edxapp | create {{ item }} application config] ************************* 
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK: [edxapp | create {{ item }} auth file] ********************************** 
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK: [edxapp | create {{ item }} yaml application config] ******************** 
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK: [edxapp | create {{ item }} yaml auth file] ***************************** 
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK: [edxapp | writing {{ item }} supervisor script] ************************* 
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK: [edxapp | writing edxapp supervisor script] ***************************** 
ok: [localhost]

TASK: [edxapp | add gunicorn configuration files] ***************************** 
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK: [edxapp | writing celery worker supervisor script] ********************** 
ok: [localhost]

TASK: [edxapp | enable {{ item }} supervisor script] ************************** 
skipping: [localhost] => (item=lms)
skipping: [localhost] => (item=cms)

TASK: [edxapp | enable edxapp supervisor script] ****************************** 
skipping: [localhost]

TASK: [edxapp | enable celery worker supervisor script] *********************** 
skipping: [localhost]

TASK: [edxapp | create helper scripts for managing edxapp] ******************** 
ok: [localhost] => (item=['edxapp-migrate', 'lms'])
ok: [localhost] => (item=['edxapp-migrate', 'cms'])
ok: [localhost] => (item=['edxapp-runserver', 'lms'])
ok: [localhost] => (item=['edxapp-runserver', 'cms'])
ok: [localhost] => (item=['edxapp-syncdb', 'lms'])
ok: [localhost] => (item=['edxapp-syncdb', 'cms'])
ok: [localhost] => (item=['edxapp-update-assets', 'lms'])
ok: [localhost] => (item=['edxapp-update-assets', 'cms'])
ok: [localhost] => (item=['edxapp-shell', 'lms'])
ok: [localhost] => (item=['edxapp-shell', 'cms'])

TASK: [edxapp | migrate] ****************************************************** 
skipping: [localhost] => (item=lms)
skipping: [localhost] => (item=cms)

TASK: [edxapp | gather {{ item }} static assets with paver] ******************* 
changed: [localhost] => (item=lms)
changed: [localhost] => (item=cms)

TASK: [edxapp | update supervisor configuration] ****************************** 
skipping: [localhost]

TASK: [edxapp | ensure edxapp has started] ************************************ 
skipping: [localhost] => (item=lms)
skipping: [localhost] => (item=cms)

TASK: [edxapp | ensure edxapp_workers has started] **************************** 
skipping: [localhost] => (item={'queue': 'low', 'service_variant': 'cms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'default', 'service_variant': 'cms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'high', 'service_variant': 'cms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'low', 'service_variant': 'lms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'default', 'service_variant': 'lms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'high', 'service_variant': 'lms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'high_mem', 'service_variant': 'lms', 'monitor': False, 'concurrency': 1, 'max_tasks_per_child': 1})

TASK: [edxapp | create symlinks from the venv bin dir] ************************ 
ok: [localhost] => (item=python)
ok: [localhost] => (item=pip)
ok: [localhost] => (item=django-admin.py)

TASK: [edxapp | create symlinks from the repo dir] **************************** 
ok: [localhost] => (item=manage.py)

TASK: [edxapp | remove read-only ssh key] ************************************* 
skipping: [localhost]

TASK: [edxapp | get instance information] ************************************* 
skipping: [localhost]

TASK: [edxapp | tag instance with edx_platform version] *********************** 
skipping: [localhost]

TASK: [edxapp | tag instance  with edxapp theme version] ********************** 
skipping: [localhost]

TASK: [edxapp | set_fact edxapp_installed=true] ******************************* 
ok: [localhost]

TASK: [edxapp | restart edxapp] *********************************************** 
skipping: [localhost] => (item=lms)
skipping: [localhost] => (item=cms)

TASK: [edxapp | restart edxapp_workers] *************************************** 
skipping: [localhost] => (item={'queue': 'low', 'service_variant': 'cms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'default', 'service_variant': 'cms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'high', 'service_variant': 'cms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'low', 'service_variant': 'lms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'default', 'service_variant': 'lms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'high', 'service_variant': 'lms', 'monitor': True, 'concurrency': 1})
skipping: [localhost] => (item={'queue': 'high_mem', 'service_variant': 'lms', 'monitor': False, 'concurrency': 1, 'max_tasks_per_child': 1})

TASK: [xqueue | create application user] ************************************** 
ok: [localhost]

TASK: [xqueue | create xqueue app and venv dir] ******************************* 
ok: [localhost] => (item=/edx/app/xqueue)
ok: [localhost] => (item=/edx/app/xqueue/venvs)

TASK: [xqueue | install a bunch of system packages on which xqueue relies] **** 
ok: [localhost]

TASK: [xqueue | writing supervisor scripts - xqueue, xqueue consumer] ********* 
ok: [localhost] => (item=xqueue)
ok: [localhost] => (item=xqueue_consumer)

TASK: [xqueue | enabling supervisor scripts - xqueue, xqueue consumer] ******** 
skipping: [localhost] => (item=xqueue)
skipping: [localhost] => (item=xqueue_consumer)

TASK: [xqueue | add gunicorn configuration file] ****************************** 
ok: [localhost]

TASK: [xqueue | create xqueue application config] ***************************** 
ok: [localhost]

TASK: [xqueue | create xqueue auth file] ************************************** 
ok: [localhost]

TASK: [xqueue | git checkout xqueue repo into xqueue_code_dir] **************** 
changed: [localhost]

TASK: [xqueue | install python pre-requirements] ****************************** 
ok: [localhost]

TASK: [xqueue | install python post-requirements] ***************************** 
changed: [localhost]

TASK: [xqueue | migrate] ****************************************************** 
skipping: [localhost]

TASK: [xqueue | create users] ************************************************* 
changed: [localhost]

TASK: [xqueue | update supervisor configuration] ****************************** 
skipping: [localhost]

TASK: [xqueue | ensure xqueue, consumer is running] *************************** 
skipping: [localhost] => (item=xqueue)
skipping: [localhost] => (item=xqueue_consumer)

TASK: [xqueue | create a symlink for venv python] ***************************** 
ok: [localhost] => (item=python)
ok: [localhost] => (item=pip)

TASK: [xqueue | restart xqueue] *********************************************** 
skipping: [localhost] => (item=xqueue)
skipping: [localhost] => (item=xqueue_consumer)

PLAY RECAP ******************************************************************** 
localhost                  : ok=172  changed=36   unreachable=0    failed=0   

We're at /tmp/tmp.Um2GfQ0IGZ
Running the Django 1.8 faked migrations
Operations to perform:
  Synchronize unmigrated apps: eventtracking_django, links, djcelery, discussion_api, edxnotes, auth_exchange, service_status, sekizai, rest_framework, edxmako, openassessment, datadog, staticbook, common_views, course_wiki, support, open_ended_grading, course_structure_api, django_countries, humanize, course_blocks, provider, static_replace, notification_prefs, thumbnail, xblock, mptt, staticfiles, microsite_configuration, markdownedx, fileupload, edx_sga, edx_jsme, monitoring, instructor, static_template_view, corsheaders, pipeline, simple_history, enrollment, messages, config_models, notifier_api, dashboard, django_nose, debug, mailing, theming
  Apply all migrations: wiki, dark_lang, branding, user_api, django_comment_common, course_overviews, sites, licenses, xblock_django, mobile_api, course_groups, credit, course_modes, sessions, shoppingcart, workflow, external_auth, foldit, contenttypes, splash, certificates, third_party_auth, assessment, submissions, status, oauth2_provider, instructor_task, organizations, track, django_notify, auth, util, verify_student, lms_xblock, oauth2, psychometrics, student, embargo, commerce, milestones, course_action_state, edx_proctoring, default, oauth_provider, courseware, programs, edxval, teams, admin, django_openid_auth, bulk_email, survey, course_structures, cors_csrf, notes, self_paced
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
  Installing custom SQL...
Running migrations:
  No migrations to apply.
  Your models have changes that are not yet reflected in a migration, and so won't be applied.
  Run 'manage.py makemigrations' to make new migrations, and then re-run 'manage.py migrate' to apply them.
Operations to perform:
  Synchronize unmigrated apps: eventtracking_django, djcelery, fileupload, service_status, method_override, edxmako, openassessment, datadog, common_views, static_replace, staticfiles, edx_jsme, monitoring, pipeline, simple_history, require, messages, config_models, xblock, django_nose, edx_sga, theming
  Apply all migrations: dark_lang, student, user_api, django_comment_common, course_overviews, xblock_django, course_groups, credit, course_modes, workflow, sites, external_auth, contenttypes, assessment, sessions, track, auth, verify_student, contentstore, xblock_config, embargo, milestones, course_action_state, course_creators, edx_proctoring, admin, submissions, programs, edxval, django_openid_auth, course_structures, self_paced
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
  Installing custom SQL...
Running migrations:
  No migrations to apply.
Operations to perform:
  Synchronize unmigrated apps: staticfiles, messages
  Apply all migrations: queue, contenttypes, sites, auth, sessions
Synchronizing apps without migrations:
  Creating tables...
    Running deferred SQL...
  Installing custom SQL...
Running migrations:
  No migrations to apply.
!!! CHECKPOINT 3 !!!
Updating to final version of code
We're at /tmp/tmp.Um2GfQ0IGZ/configuration/playbooks
Collecting pip
  Using cached pip-8.1.2-py2.py3-none-any.whl
Installing collected packages: pip
  Found existing installation: pip 7.1.2
    Uninstalling pip-7.1.2:
      Successfully uninstalled pip-7.1.2
Successfully installed pip-8.1.2
You are using pip version 6.0.8, however version 8.1.2 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
Collecting pip from https://pypi.python.org/packages/9c/32/004ce0852e0a127f07f358b715015763273799bd798956fa930814b60f39/pip-8.1.2-py2.py3-none-any.whl#md5=0570520434c5b600d89ec95393b2650b
  Using cached pip-8.1.2-py2.py3-none-any.whl
Installing collected packages: pip
  Found existing installation: pip 6.0.8
    Uninstalling pip-6.0.8:
      Successfully uninstalled pip-6.0.8

Successfully installed pip-8.1.2
Collecting pip
  Using cached pip-8.1.2-py2.py3-none-any.whl
Installing collected packages: pip
  Found existing installation: pip 7.1.2
    Uninstalling pip-7.1.2:
      Successfully uninstalled pip-7.1.2
Successfully installed pip-8.1.2
Collecting pip
  Using cached pip-8.1.2-py2.py3-none-any.whl
Installing collected packages: pip
  Found existing installation: pip 7.1.2
    Uninstalling pip-7.1.2:
      Successfully uninstalled pip-7.1.2
Successfully installed pip-8.1.2
!!! CHECKPOINT 3.1 (PIP UPGRADE DONE)!

PLAY [Configure instance(s)] ************************************************** 

GATHERING FACTS *************************************************************** 
ok: [localhost]

TASK: [user | debug var=user_info] ******************************************** 
ok: [localhost] => {
    "var": {
        "user_info": []
    }
}

TASK: [user | create the edxadmin group] ************************************** 
ok: [localhost]

TASK: [user | Install role-independent useful system packages] **************** 
ok: [localhost] => (item=curl)

TASK: [user | ensure sudoers.d is read] *************************************** 
ok: [localhost]

TASK: [user | grant full sudo access to the edxadmin group] ******************* 
ok: [localhost]

TASK: [user | create the users] *********************************************** 
skipping: [localhost]

TASK: [user | create .ssh directory] ****************************************** 
skipping: [localhost]

TASK: [user | assign admin role to admin users] ******************************* 
skipping: [localhost]

TASK: [user | get github key[s]] ********************************************** 
skipping: [localhost]

TASK: [user | update the authorized_keys file] ******************************** 
skipping: [localhost]

TASK: [user | create bashrc file for normal users] **************************** 
skipping: [localhost]

TASK: [user | create .profile for all users] ********************************** 
skipping: [localhost]

TASK: [user | modify shell for restricted users] ****************************** 
skipping: [localhost]

TASK: [user | create bashrc file for restricted users] ************************ 
skipping: [localhost]

TASK: [user | create sudoers file from template] ****************************** 
ok: [localhost]

TASK: [user | change home directory ownership to root for restricted users] *** 
skipping: [localhost]

TASK: [user | create ~/bin directory] ***************************************** 
skipping: [localhost]

TASK: [user | create allowed command links] *********************************** 
skipping: [localhost]

TASK: [security | install security packages] ********************************** 
skipping: [localhost]

TASK: [security | update all system packages] ********************************* 
skipping: [localhost]

TASK: [security | configure periodic unattended-upgrades] ********************* 
skipping: [localhost]

TASK: [security | disable unattended-upgrades] ******************************** 
skipping: [localhost]

TASK: [security | only unattended-upgrade from security repo] ***************** 
skipping: [localhost]

TASK: [security | disable security only updates on unattended-upgrades] ******* 
skipping: [localhost]

TASK: [security | Check if we are vulnerable] ********************************* 
skipping: [localhost]

TASK: [security | Apply bash security update if we are vulnerable] ************ 
skipping: [localhost]

TASK: [security | Check again and fail if we are still vulnerable] ************ 
skipping: [localhost]

TASK: [security | GHOST.c] **************************************************** 
skipping: [localhost]

TASK: [security | compile GHOST] ********************************************** 
skipping: [localhost]

TASK: [security | Check if we are vulnerable] ********************************* 
skipping: [localhost]

TASK: [security | Apply glibc security update if we are vulnerable] *********** 
skipping: [localhost]

TASK: [common | Update CA Certificates] *************************************** 
changed: [localhost]

TASK: [common | Add user www-data] ******************************************** 
ok: [localhost]

TASK: [common | check if instance is vagrant] ********************************* 
ok: [localhost]

TASK: [common | add edx ppa apt key] ****************************************** 
ok: [localhost]

TASK: [common | Add git apt repository] *************************************** 
ok: [localhost]

TASK: [common | Add edx apt repository] *************************************** 
ok: [localhost]

TASK: [common | Install role-independent useful system packages] ************** 
ok: [localhost] => (item=ntp,lynx-cur,logrotate,rsyslog,git,unzip,python2.7=2.7.10-0+precise1,python-pip,python2.7-dev)

TASK: [common | Create common directories] ************************************ 
ok: [localhost] => (item={'path': u'/edx/var'})
ok: [localhost] => (item={'path': u'/edx/app'})
ok: [localhost] => (item={'path': u'/edx/bin'})
ok: [localhost] => (item={'path': u'/edx/etc'})
ok: [localhost] => (item={'owner': u'syslog', 'path': u'/edx/var/log', 'group': u'syslog'})
ok: [localhost] => (item={'path': '/etc/logrotate.d/hourly'})
ok: [localhost] => (item={'path': '/etc/rsyslog.d/50-default.conf', 'state': 'absent'})

TASK: [common | upload sudo config for key forwarding as root] **************** 
ok: [localhost]

TASK: [common | pip install virtualenv] *************************************** 
changed: [localhost] => (item=pip==7.1.2)
ok: [localhost] => (item=setuptools==18.3.2)
ok: [localhost] => (item=virtualenv==13.1.2)
ok: [localhost] => (item=virtualenvwrapper)

TASK: [common | update /etc/hosts] ******************************************** 
skipping: [localhost]

TASK: [common | update /etc/hostname] ***************************************** 
skipping: [localhost]

TASK: [common | run hostname] ************************************************* 
skipping: [localhost]

TASK: [common | Copy the templates to their respestive destination] *********** 
ok: [localhost] => (item={'dest': '/etc/rsyslog.d/99-edx.conf', 'src': 'edx_rsyslog.j2'})
ok: [localhost] => (item={'dest': '/etc/logrotate.d/hourly/edx-services', 'src': 'etc/logrotate.d/hourly/edx_logrotate.j2'})
ok: [localhost] => (item={'dest': '/etc/cron.hourly/logrotate', 'src': 'etc/cron.hourly/logrotate.j2', 'mode': '555'})
ok: [localhost] => (item={'dest': '/etc/logrotate.d/hourly/tracking.log', 'src': 'etc/logrotate.d/hourly/edx_logrotate_tracking_log.j2'})

TASK: [common | restart rsyslogd] ********************************************* 
skipping: [localhost]

TASK: [server_utils | Install system packages] ******************************** 
ok: [localhost] => (item=ack-grep,mosh,curl,tree,screen,tmux,curl,vim-tiny,dnsutils,inetutils-telnet,netcat)

TASK: [common | Update CA Certificates] *************************************** 
changed: [localhost]

TASK: [common | Add user www-data] ******************************************** 
ok: [localhost]

TASK: [common | check if instance is vagrant] ********************************* 
ok: [localhost]

TASK: [common | add edx ppa apt key] ****************************************** 
ok: [localhost]

TASK: [common | Add git apt repository] *************************************** 
ok: [localhost]

TASK: [common | Add edx apt repository] *************************************** 
ok: [localhost]

TASK: [common | Install role-independent useful system packages] ************** 
ok: [localhost] => (item=ntp,lynx-cur,logrotate,rsyslog,git,unzip,python2.7=2.7.10-0+precise1,python-pip,python2.7-dev)

TASK: [common | Create common directories] ************************************ 
ok: [localhost] => (item={'path': u'/edx/var'})
ok: [localhost] => (item={'path': u'/edx/app'})
ok: [localhost] => (item={'path': u'/edx/bin'})
ok: [localhost] => (item={'path': u'/edx/etc'})
ok: [localhost] => (item={'owner': u'syslog', 'path': u'/edx/var/log', 'group': u'syslog'})
ok: [localhost] => (item={'path': '/etc/logrotate.d/hourly'})
ok: [localhost] => (item={'path': '/etc/rsyslog.d/50-default.conf', 'state': 'absent'})

TASK: [common | upload sudo config for key forwarding as root] **************** 
ok: [localhost]

TASK: [common | pip install virtualenv] *************************************** 
ok: [localhost] => (item=pip==7.1.2)
ok: [localhost] => (item=setuptools==18.3.2)
ok: [localhost] => (item=virtualenv==13.1.2)
ok: [localhost] => (item=virtualenvwrapper)

TASK: [common | update /etc/hosts] ******************************************** 
skipping: [localhost]

TASK: [common | update /etc/hostname] ***************************************** 
skipping: [localhost]

TASK: [common | run hostname] ************************************************* 
skipping: [localhost]

TASK: [common | Copy the templates to their respestive destination] *********** 
ok: [localhost] => (item={'dest': '/etc/rsyslog.d/99-edx.conf', 'src': 'edx_rsyslog.j2'})
ok: [localhost] => (item={'dest': '/etc/logrotate.d/hourly/edx-services', 'src': 'etc/logrotate.d/hourly/edx_logrotate.j2'})
ok: [localhost] => (item={'dest': '/etc/cron.hourly/logrotate', 'src': 'etc/cron.hourly/logrotate.j2', 'mode': '555'})
ok: [localhost] => (item={'dest': '/etc/logrotate.d/hourly/tracking.log', 'src': 'etc/logrotate.d/hourly/edx_logrotate_tracking_log.j2'})

TASK: [common | restart rsyslogd] ********************************************* 
skipping: [localhost]

TASK: [vhost | Copy the templates to their respestive destination] ************ 
changed: [localhost] => (item={'dest': '/etc/motd.tail', 'src': u'etc/motd.tail.j2', 'mode': '755'})
changed: [localhost] => (item={'dest': '/etc/ssh/sshd_config', 'src': 'etc/ssh/sshd_config.j2'})

TASK: [vhost | restart ssh] *************************************************** 
changed: [localhost]

TASK: [edx_ansible | create application user] ********************************* 
ok: [localhost]

TASK: [edx_ansible | create edx_ansible app and venv dir] ********************* 
ok: [localhost] => (item=/edx/app/edx_ansible)
ok: [localhost] => (item=/edx/var/edx_ansible)
ok: [localhost] => (item=/edx/app/edx_ansible/venvs)

TASK: [edx_ansible | install a bunch of system packages on which edx_ansible relies] *** 
ok: [localhost]

TASK: [edx_ansible | git checkout edx_ansible repo into edx_ansible_code_dir] *** 
ok: [localhost]

TASK: [edx_ansible | install edx_ansible venv requirements] ******************* 
changed: [localhost] => (item=/edx/app/edx_ansible/edx_ansible/pre-requirements.txt)
ok: [localhost] => (item=/edx/app/edx_ansible/edx_ansible/requirements.txt)

TASK: [edx_ansible | create update script] ************************************ 
ok: [localhost]

TASK: [edx_ansible | create a symlink for update.sh] ************************** 
ok: [localhost]

TASK: [edx_ansible | create a symlink for ansible-playbook] ******************* 
ok: [localhost]

TASK: [edx_ansible | create a symlink for the playbooks dir] ****************** 
ok: [localhost]

TASK: [user | debug var=user_info] ******************************************** 
ok: [localhost] => {
    "var": {
        "user_info": []
    }
}

TASK: [user | create the edxadmin group] ************************************** 
ok: [localhost]

TASK: [user | Install role-independent useful system packages] **************** 
ok: [localhost] => (item=curl)

TASK: [user | ensure sudoers.d is read] *************************************** 
ok: [localhost]

TASK: [user | grant full sudo access to the edxadmin group] ******************* 
ok: [localhost]

TASK: [user | create the users] *********************************************** 
skipping: [localhost]

TASK: [user | create .ssh directory] ****************************************** 
skipping: [localhost]

TASK: [user | assign admin role to admin users] ******************************* 
skipping: [localhost]

TASK: [user | get github key[s]] ********************************************** 
skipping: [localhost]

TASK: [user | update the authorized_keys file] ******************************** 
skipping: [localhost]

TASK: [user | create bashrc file for normal users] **************************** 
skipping: [localhost]

TASK: [user | create .profile for all users] ********************************** 
skipping: [localhost]

TASK: [user | modify shell for restricted users] ****************************** 
skipping: [localhost]

TASK: [user | create bashrc file for restricted users] ************************ 
skipping: [localhost]

TASK: [user | create sudoers file from template] ****************************** 
ok: [localhost]

TASK: [user | change home directory ownership to root for restricted users] *** 
skipping: [localhost]

TASK: [user | create ~/bin directory] ***************************************** 
skipping: [localhost]

TASK: [user | create allowed command links] *********************************** 
skipping: [localhost]

TASK: [nginx | create nginx app dirs] ***************************************** 
ok: [localhost] => (item=/edx/app/nginx)
ok: [localhost] => (item=/edx/app/nginx/sites-available)
ok: [localhost] => (item=/etc/nginx/sites-enabled)
ok: [localhost] => (item=/edx/app/nginx/conf.d)

TASK: [nginx | create nginx data dirs] **************************************** 
ok: [localhost] => (item=/edx/var/nginx)
changed: [localhost] => (item=/edx/var/log/nginx)
ok: [localhost] => (item=/edx/var/nginx/server-static)

TASK: [nginx | Install nginx packages] **************************************** 
ok: [localhost]

TASK: [nginx | Remove the default site] *************************************** 
ok: [localhost]

TASK: [nginx | Server configuration file] ************************************* 
ok: [localhost]

TASK: [nginx | Creating common nginx configuration] *************************** 
ok: [localhost]

TASK: [nginx | Create robot rules] ******************************************** 
skipping: [localhost]

TASK: [nginx | Creating link for common nginx configuration] ****************** 
ok: [localhost]

TASK: [nginx | Copying nginx configs for ['cms', 'lms', 'forum', 'xqueue', 'certs']] *** 
ok: [localhost] => (item=cms)
ok: [localhost] => (item=lms)
ok: [localhost] => (item=forum)
ok: [localhost] => (item=xqueue)
ok: [localhost] => (item=certs)

TASK: [nginx | Creating nginx config links for ['cms', 'lms', 'forum', 'xqueue', 'certs']] *** 
ok: [localhost] => (item=cms)
ok: [localhost] => (item=lms)
ok: [localhost] => (item=forum)
ok: [localhost] => (item=xqueue)
ok: [localhost] => (item=certs)

TASK: [nginx | Copying nginx extra configs] *********************************** 
skipping: [localhost]

TASK: [nginx | Creating links for nginx extra configs] ************************ 
skipping: [localhost]

TASK: [nginx | Copying custom nginx config] *********************************** 
skipping: [localhost]

TASK: [nginx | Copying nginx redirect configs for {{ nginx_redirects }}] ****** 
skipping: [localhost]

TASK: [nginx | Creating nginx redirect links for {{ nginx_redirects }}] ******* 
skipping: [localhost]

TASK: [nginx | Create NGINX server templates] ********************************* 
ok: [localhost] => (item={'msg': u'If think you have encountered this message in error please let us know at <a href="mailto:technical@example.com">technical@example.com</a>', 'img': u'https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Pendleton_Sinking_Ship.jpg/640px-Pendleton_Sinking_Ship.jpg', 'heading': 'Uh oh, we are having some server issues..', 'file': 'rate-limit.html', 'title': 'Rate limit exceeded'})
ok: [localhost] => (item={'msg': u'We have been notified of the error, if it persists please let us know at <a href="mailto:technical@example.com">technical@example.com</a>', 'img': u'https://upload.wikimedia.org/wikipedia/commons/thumb/1/11/Pendleton_Sinking_Ship.jpg/640px-Pendleton_Sinking_Ship.jpg', 'heading': 'Uh oh, we are having some server issues..', 'file': 'server-error.html', 'title': 'Server error'})

TASK: [nginx | Write out htpasswd file] *************************************** 
skipping: [localhost]

TASK: [nginx | Create nginx log file location (just in case)] ***************** 
changed: [localhost]

TASK: [nginx | stat] ********************************************************** 
ok: [localhost -> 127.0.0.1]

TASK: [nginx | stat] ********************************************************** 
ok: [localhost -> 127.0.0.1]

TASK: [nginx | copy ssl cert] ************************************************* 
skipping: [localhost]

TASK: [nginx | copy ssl key] ************************************************** 
skipping: [localhost]

TASK: [nginx | Removing default nginx config and restart (enabled)] *********** 
ok: [localhost]

TASK: [nginx | Set up nginx access log rotation] ****************************** 
ok: [localhost]

TASK: [nginx | Set up nginx access log rotation] ****************************** 
ok: [localhost]

TASK: [nginx | make sure nginx has started] *********************************** 
ok: [localhost]

TASK: [mysql | Add MySQL experimental apt key] ******************************** 
ok: [localhost]

TASK: [mysql | Install apt repository] **************************************** 
ok: [localhost]

TASK: [mysql | install mysql 56 and dependencies] ***************************** 
ok: [localhost] => (item=software-properties-common,python-mysqldb,mysql-server=5.6.*)

TASK: [mysql | Ensure Anonymous user(s) does not exist] *********************** 
ok: [localhost] => (item=localhost)
ok: [localhost] => (item=vultr)

TASK: [mysql | start mysql] *************************************************** 
ok: [localhost]

TASK: [edxlocal | install packages needed for single server] ****************** 
ok: [localhost] => (item=postfix,libjpeg-dev)

TASK: [edxlocal | create databases] ******************************************* 
skipping: [localhost]
skipping: [localhost]
skipping: [localhost]
ok: [localhost] => (item=xqueue)
ok: [localhost] => (item=edxapp)
skipping: [localhost]
skipping: [localhost]
ok: [localhost] => (item=analytics-api)
ok: [localhost] => (item=reports)

TASK: [edxlocal | create database users] ************************************** 
skipping: [localhost] => (item={'db': u'', 'user': u'{# ECOMMERCE_DATABASES.default.USER | default(None) #}', 'pass': u'{# ECOMMERCE_DATABASES.default.PASSWORD | default(None) #}'})
skipping: [localhost] => (item={'db': u'', 'user': u'{# INSIGHTS_DATABASES.default.USER | default(None) #}', 'pass': u'{# INSIGHTS_DATABASES.default.PASSWORD | default(None) #}'})
skipping: [localhost] => (item={'db': u'', 'user': u'', 'pass': u''})
ok: [localhost] => (item={'db': u'xqueue', 'user': u'xqueue001', 'pass': u'password'})
ok: [localhost] => (item={'db': u'edxapp', 'user': u'edxapp001', 'pass': u'password'})
skipping: [localhost] => (item={'db': u'', 'user': u'{# PROGRAMS_DATABASES.default.USER | default(None) #}', 'pass': u'{# PROGRAMS_DATABASES.default.PASSWORD | default(None) #}'})
skipping: [localhost] => (item={'db': u'', 'user': u'{# ANALYTICS_PIPELINE_OUTPUT_DATABASE.username #}', 'pass': u'{# ANALYTICS_PIPELINE_OUTPUT_DATABASE.password #}'})
skipping: [localhost] => (item={'db': u'', 'user': u'{# HIVE_METASTORE_DATABASE.user | default(None) #}', 'pass': u'{# HIVE_METASTORE_DATABASE.password | default(None) #}'})

TASK: [edxlocal | setup the migration db user] ******************************** 
skipping: [localhost]
skipping: [localhost]
skipping: [localhost]
ok: [localhost] => (item=xqueue)
ok: [localhost] => (item=edxapp)
skipping: [localhost]
skipping: [localhost]
ok: [localhost] => (item=analytics-api)
ok: [localhost] => (item=reports)

TASK: [edxlocal | create api user for the analytics api] ********************** 
ok: [localhost]

TASK: [edxlocal | create read-only reports user for the analytics-api] ******** 
ok: [localhost]

TASK: [edxlocal | create a database for the hive metastore] ******************* 
skipping: [localhost]

TASK: [edxlocal | setup the edx-notes-api db user] **************************** 
skipping: [localhost]

TASK: [edxlocal | setup the read-only db user] ******************************** 
ok: [localhost]

TASK: [edxlocal | setup the admin db user] ************************************ 
ok: [localhost]

TASK: [edxlocal | install memcached] ****************************************** 
ok: [localhost]

TASK: [mongo | check to see that MongoDB 2.4 is not installed] **************** 
ok: [localhost]

TASK: [mongo | verify 2.4 not installed] ************************************** 
skipping: [localhost]

TASK: [mongo | remove mongo 2.4 if present] *********************************** 
skipping: [localhost]

TASK: [mongo | install python pymongo for mongo_user ansible module] ********** 
ok: [localhost]

TASK: [mongo | add the mongodb signing key] *********************************** 
ok: [localhost]

TASK: [mongo | add the mongodb repo to the sources list] ********************** 
ok: [localhost]

TASK: [mongo | install mongo server and recommends] *************************** 
ok: [localhost]

TASK: [mongo | create mongo dirs] ********************************************* 
ok: [localhost] => (item=/edx/var/mongo)
ok: [localhost] => (item=/edx/var/mongo/mongodb)
ok: [localhost] => (item=/edx/var/log/mongo)
ok: [localhost] => (item=/edx/var/mongo/mongodb/journal)

TASK: [mongo | stop mongod service] ******************************************* 
changed: [localhost]

TASK: [mongo | move mongodb to {{ mongo_data_dir }}] ************************** 
ok: [localhost]

TASK: [mongo | copy mongodb key file] ***************************************** 
skipping: [localhost]

TASK: [mongo | copy configuration template] *********************************** 
ok: [localhost]

TASK: [mongo | start mongo service] ******************************************* 
changed: [localhost]

TASK: [mongo | wait for mongo server to start] ******************************** 
ok: [localhost]

TASK: [mongo | drop super user script] **************************************** 
changed: [localhost]

TASK: [mongo | create super user with js] ************************************* 
changed: [localhost]

TASK: [mongo | delete super user script] ************************************** 
changed: [localhost]

TASK: [mongo | Create the file to initialize the mongod replica set] ********** 
skipping: [localhost]

TASK: [mongo | Initialize the replication set] ******************************** 
skipping: [localhost]

TASK: [mongo | create a mongodb user] ***************************************** 
ok: [localhost] => (item={'password': 'password', 'user': 'cs_comments_service', 'roles': 'readWrite', 'database': 'cs_comments_service'})
ok: [localhost] => (item={'password': 'password', 'user': 'edxapp', 'roles': 'readWrite', 'database': 'edxapp'})

TASK: [mongo | create a mongodb user] ***************************************** 
skipping: [localhost] => (item={'password': 'password', 'user': 'cs_comments_service', 'roles': 'readWrite', 'database': 'cs_comments_service'})
skipping: [localhost] => (item={'password': 'password', 'user': 'edxapp', 'roles': 'readWrite', 'database': 'edxapp'})

TASK: [mongo | install s3cmd] ************************************************* 
skipping: [localhost]

TASK: [mongo | configure s3cmd] *********************************************** 
skipping: [localhost]

TASK: [mongo | install backup-mongo-to-s3 script] ***************************** 
skipping: [localhost]

TASK: [mongo | schedule backup-mongo-to-3s crontab] *************************** 
skipping: [localhost]

TASK: [supervisor | create application user] ********************************** 
ok: [localhost]

TASK: [supervisor | create supervisor service user] *************************** 
ok: [localhost]

TASK: [supervisor | create supervisor directories] **************************** 
ok: [localhost] => (item=/edx/app/supervisor)
ok: [localhost] => (item=/edx/app/supervisor/venvs/supervisor)

TASK: [supervisor | create service user accessible dirs] ********************** 
ok: [localhost] => (item=/edx/app/supervisor/conf.d)
ok: [localhost] => (item=/edx/app/supervisor/conf.available.d)

TASK: [supervisor | create supervisor directories] **************************** 
ok: [localhost] => (item=/edx/var/supervisor)
ok: [localhost] => (item=/edx/var/log/supervisor)

TASK: [supervisor | install supervisor in its venv] *************************** 
ok: [localhost]

TASK: [supervisor | install supervisor in its venv] *************************** 
ok: [localhost] => (item=boto=="2.34.0")
ok: [localhost] => (item=python-simple-hipchat)

TASK: [supervisor | create supervisor upstart job] **************************** 
changed: [localhost]

TASK: [supervisor | create pre_supervisor upstart job] ************************ 
skipping: [localhost]

TASK: [supervisor | write the pre_suprevisor python script] ******************* 
skipping: [localhost]

TASK: [supervisor | create supervisor master config] ************************** 
ok: [localhost]

TASK: [supervisor | create a symlink for supervisortctl] ********************** 
changed: [localhost]

TASK: [supervisor | create a symlink for supervisor cfg] ********************** 
ok: [localhost] => (item=/edx/app/supervisor/supervisord.conf)
ok: [localhost] => (item=/edx/app/supervisor/conf.d)

TASK: [supervisor | create helper script for running supervisor] ************** 
changed: [localhost]

TASK: [supervisor | start supervisor] ***************************************** 
ok: [localhost]

TASK: [supervisor | wait for web port to be available] ************************ 
skipping: [localhost]

TASK: [supervisor | update supervisor configuration] ************************** 
ok: [localhost]

TASK: [edxapp_common | Install system packages] ******************************* 
ok: [localhost]

TASK: [rbenv | fail rbenv_user required for role] ***************************** 
skipping: [localhost]

TASK: [rbenv | fail rbenv_dir required for role] ****************************** 
skipping: [localhost]

TASK: [rbenv | fail rbenv_ruby_version required for role] ********************* 
skipping: [localhost]

TASK: [rbenv | create rbenv user {{ edxapp_user }}] *************************** 
ok: [localhost]

TASK: [rbenv | create rbenv dir if it does not exist] ************************* 
ok: [localhost]

TASK: [rbenv | install build depends] ***************************************** 
ok: [localhost] => (item=curl,build-essential,libcurl4-openssl-dev,libreadline-dev,libssl-dev,libxml2-dev,libxslt1-dev,zlib1g-dev)

TASK: [rbenv | update rbenv repo] ********************************************* 
ok: [localhost]

TASK: [rbenv | ensure ruby_env exists] **************************************** 
ok: [localhost]

TASK: [rbenv | check ruby-build installed] ************************************ 
changed: [localhost]

TASK: [rbenv | if ruby-build exists, which versions we can install] *********** 
changed: [localhost]

TASK: [rbenv | create temporary directory] ************************************ 
changed: [localhost]

TASK: [rbenv | clone ruby-build repo] ***************************************** 
changed: [localhost]

TASK: [rbenv | install ruby-build] ******************************************** 
changed: [localhost]

TASK: [rbenv | remove temporary directory] ************************************ 
changed: [localhost]

TASK: [rbenv | check ruby {{ edxapp_ruby_version }} installed] **************** 
changed: [localhost]

TASK: [rbenv | install ruby {{ edxapp_ruby_version }}] ************************ 
skipping: [localhost]

TASK: [rbenv | set global ruby {{ edxapp_ruby_version }}] ********************* 
changed: [localhost]

TASK: [rbenv | install bundler] *********************************************** 
changed: [localhost]

TASK: [rbenv | remove rbenv version of rake] ********************************** 
ok: [localhost]

TASK: [rbenv | install rake gem] ********************************************** 
changed: [localhost]

TASK: [rbenv | rehash] ******************************************************** 
changed: [localhost]

TASK: [supervisor | create application user] ********************************** 
ok: [localhost]

TASK: [supervisor | create supervisor service user] *************************** 
ok: [localhost]

TASK: [supervisor | create supervisor directories] **************************** 
ok: [localhost] => (item=/edx/app/devpi/supervisor)
ok: [localhost] => (item=/edx/app/devpi/venvs/supervisor)

TASK: [supervisor | create service user accessible dirs] ********************** 
ok: [localhost] => (item=/edx/app/devpi/supervisor/conf.d)
ok: [localhost] => (item=/edx/app/devpi/supervisor/conf.available.d)

TASK: [supervisor | create supervisor directories] **************************** 
ok: [localhost] => (item=/edx/var/devpi/supervisor)
ok: [localhost] => (item=/edx/var/log/devpi/supervisor)

TASK: [supervisor | install supervisor in its venv] *************************** 
ok: [localhost]

TASK: [supervisor | install supervisor in its venv] *************************** 
ok: [localhost] => (item=boto=="2.34.0")
ok: [localhost] => (item=python-simple-hipchat)

TASK: [supervisor | create supervisor upstart job] **************************** 
changed: [localhost]

TASK: [supervisor | create pre_supervisor upstart job] ************************ 
skipping: [localhost]

TASK: [supervisor | write the pre_suprevisor python script] ******************* 
skipping: [localhost]

TASK: [supervisor | create supervisor master config] ************************** 
ok: [localhost]

TASK: [supervisor | create a symlink for supervisortctl] ********************** 
skipping: [localhost]

TASK: [supervisor | create a symlink for supervisor cfg] ********************** 
skipping: [localhost] => (item=/edx/app/devpi/supervisor/supervisord.conf)
skipping: [localhost] => (item=/edx/app/devpi/supervisor/conf.d)

TASK: [supervisor | create helper script for running supervisor] ************** 
skipping: [localhost]

TASK: [supervisor | start supervisor] ***************************************** 
ok: [localhost]

TASK: [supervisor | wait for web port to be available] ************************ 
skipping: [localhost]

TASK: [supervisor | update supervisor configuration] ************************** 
ok: [localhost]

TASK: [devpi | create devpi user] ********************************************* 
ok: [localhost]

TASK: [devpi | create devpi application directories] ************************** 
ok: [localhost] => (item=/edx/app/devpi)
ok: [localhost] => (item=/edx/app/devpi/venvs/devpi)

TASK: [devpi | create the devpi data directory, needs write access by the service user] *** 
ok: [localhost] => (item=/edx/var/devpi)
ok: [localhost] => (item=/edx/var/devpi/data)

TASK: [devpi | install devpi pip pkgs] **************************************** 
ok: [localhost] => (item=devpi-server)
ok: [localhost] => (item=eventlet)

TASK: [devpi | writing supervisor script] ************************************* 
ok: [localhost]

TASK: [devpi | create a symlink for venv python, pip] ************************* 
ok: [localhost] => (item=python)
ok: [localhost] => (item=pip)

TASK: [devpi | create a symlink for venv supervisor] ************************** 
ok: [localhost]

TASK: [devpi | create a symlink for supervisor config] ************************ 
ok: [localhost]

TASK: [devpi | update devpi supervisor configuration] ************************* 
ok: [localhost]

TASK: [devpi | ensure devpi is started] *************************************** 
ok: [localhost]

TASK: [nltk | Install unzip] ************************************************** 
ok: [localhost]

TASK: [nltk | create the nltk data directory and subdirectories] ************** 
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/taggers/maxent_treebank_pos_tagger.zip', 'path': 'taggers/maxent_treebank_pos_tagger'})
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/stopwords.zip', 'path': 'corpora/stopwords'})
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/wordnet.zip', 'path': 'corpora/wordnet'})

TASK: [nltk | download nltk data] ********************************************* 
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/taggers/maxent_treebank_pos_tagger.zip', 'path': 'taggers/maxent_treebank_pos_tagger'})
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/stopwords.zip', 'path': 'corpora/stopwords'})
ok: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/wordnet.zip', 'path': 'corpora/wordnet'})

TASK: [nltk | unarchive nltk data] ******************************************** 
skipping: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/taggers/maxent_treebank_pos_tagger.zip', 'path': 'taggers/maxent_treebank_pos_tagger'})
skipping: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/stopwords.zip', 'path': 'corpora/stopwords'})
skipping: [localhost] => (item={'url': 'http://nltk.github.com/nltk_data/packages/corpora/wordnet.zip', 'path': 'corpora/wordnet'})

TASK: [user | debug var=user_info] ******************************************** 
skipping: [localhost]

TASK: [user | create the edxadmin group] ************************************** 
skipping: [localhost]

TASK: [user | Install role-independent useful system packages] **************** 
skipping: [localhost]

TASK: [user | ensure sudoers.d is read] *************************************** 
skipping: [localhost]

TASK: [user | grant full sudo access to the edxadmin group] ******************* 
skipping: [localhost]

TASK: [user | create the users] *********************************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create .ssh directory] ****************************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | assign admin role to admin users] ******************************* 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | get github key[s]] ********************************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | update the authorized_keys file] ******************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create bashrc file for normal users] **************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create .profile for all users] ********************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | modify shell for restricted users] ****************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create bashrc file for restricted users] ************************ 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create sudoers file from template] ****************************** 
skipping: [localhost]

TASK: [user | change home directory ownership to root for restricted users] *** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create ~/bin directory] ***************************************** 
skipping: [localhost] => (item={'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []})

TASK: [user | create allowed command links] *********************************** 
skipping: [localhost] => (item=[{'sudo_cmds': [u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms migrate *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp cms syncdb *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms seed_permissions_roles *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms set_staff *', u'ALL=(www-data)  NOPASSWD:SETENV:/edx/bin/python.edxapp /edx/bin/manage.edxapp lms transfer_students *'], 'type': 'restricted', 'name': u'automator', 'authorized_keys': []}, '/usr/bin/sudo'])

TASK: [edxapp | create application user] ************************************** 
ok: [localhost]

TASK: [edxapp | create edxapp user dirs] ************************************** 
ok: [localhost] => (item=/edx/app/edxapp)
ok: [localhost] => (item=/edx/app/edxapp/.ssh)
ok: [localhost] => (item=/edx/app/edxapp/venvs)
ok: [localhost] => (item=/edx/var/edxapp/themes)
ok: [localhost] => (item=/edx/var/edxapp/staticfiles)
ok: [localhost] => (item=/edx/var/edxapp/course_static)
changed: [localhost] => (item=/edx/var/edxapp/data)

TASK: [edxapp | create edxapp var dir] **************************************** 
ok: [localhost]

TASK: [edxapp | create directory to import the courses from github] *********** 
ok: [localhost]

TASK: [edxapp | make the course data dir] ************************************* 
ok: [localhost]

TASK: [edxapp | create edxapp log dir] **************************************** 
ok: [localhost]

TASK: [edxapp | create web-writable edxapp data dirs] ************************* 
changed: [localhost] => (item=/edx/var/edxapp/data)
ok: [localhost] => (item=/edx/var/edxapp/uploads)
ok: [localhost] => (item=/edx/var/edxapp/media)

TASK: [edxapp | add ppas for current versions of nodejs] ********************** 
ok: [localhost]

TASK: [edxapp | install system packages on which LMS and CMS rely] ************ 
ok: [localhost]

TASK: [edxapp | set up edxapp .npmrc] ***************************************** 
changed: [localhost]

TASK: [edxapp | create log directories for service variants] ****************** 
ok: [localhost] => (item=lms)
ok: [localhost] => (item=cms)

TASK: [edxapp | code sandbox | Use libblas for 3gf] *************************** 
changed: [localhost]

TASK: [edxapp | code sandbox | Use liblapac for 3gf] ************************** 
changed: [localhost]

TASK: [edxapp | code sandbox | Create edxapp sandbox user] ******************** 
changed: [localhost]

TASK: [edxapp | code sandbox | Install apparmor utils system pkg] ************* 
ok: [localhost]

TASK: [edxapp | code sandbox | write out apparmor code sandbox config] ******** 
ok: [localhost]

TASK: [edxapp | code sandbox | write out sandbox user sudoers config] ********* 
ok: [localhost]

TASK: [edxapp | code sandbox | start apparmor service] ************************ 
ok: [localhost]

TASK: [edxapp | code sandbox | (bootstrap) load code sandbox profile] ********* 
changed: [localhost]

TASK: [edxapp | code sandbox | (bootstrap) put code sandbox into aa-enforce or aa-complain mode depending on EDXAPP_SANDBOX_ENFORCE] *** 
changed: [localhost]

TASK: [edxapp | setup the edxapp env] ***************************************** 
ok: [localhost]

TASK: [edxapp | create edxapp configuration dir] ****************************** 
ok: [localhost]

TASK: [edxapp | create ssh script for git (not authenticated)] **************** 
ok: [localhost]

TASK: [edxapp | create ssh script for git (authenticated)] ******************** 
skipping: [localhost]

TASK: [edxapp | install read-only ssh key] ************************************ 
skipping: [localhost]

TASK: [edxapp | set git fetch.prune to ignore deleted remote refs] ************ 
changed: [localhost]

TASK: [edxapp | checkout edx-platform repo into {{ edxapp_code_dir }}] ******** 
changed: [localhost]

TASK: [edxapp | git clean after checking out edx-platform] ******************** 
changed: [localhost]

TASK: [edxapp | checkout theme] *********************************************** 
skipping: [localhost]

TASK: [edxapp | Stat each requirements file with Github URLs to ensure it exists] *** 
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/pre.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/github.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/custom.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/base.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/post.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/paver.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/edx-private.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/post.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/local.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt)

TASK: [edxapp | Updating requirement files for git mirror] ******************** 
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/pre.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/pre.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470353895.4862626, 'inode': 901189, 'isgid': False, 'size': 508, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/pre.txt', 'xusr': False, 'atime': 1470353895.4862626, 'md5': '7763b286c06275190831255964cf8238', 'isdir': False, 'ctime': 1470353895.4862626, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '1a863e2284e87b221c853891de5a925f8434c425', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/github.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/github.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470353895.4862626, 'inode': 901192, 'isgid': False, 'size': 6029, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/github.txt', 'xusr': False, 'atime': 1470353895.4862626, 'md5': 'd93d7282464c6baf4d187bece22b38ca', 'isdir': False, 'ctime': 1470353895.4862626, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '5d581586a0426eeec37fc83b62eada0ca46176bb', 'islnk': False}, 'changed': False})
skipping: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/custom.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/custom.txt', 'stat': {'exists': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/base.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470353895.4862626, 'inode': 901188, 'isgid': False, 'size': 3459, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/base.txt', 'xusr': False, 'atime': 1470353895.4862626, 'md5': '92268cb1cbbc25a0f8d419c1647828d4', 'isdir': False, 'ctime': 1470353895.4862626, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '1a36e125c54a87fa72bc3c253b4510f957dc96e5', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/post.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/post.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470353895.4862626, 'inode': 901107, 'isgid': False, 'size': 565, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/post.txt', 'xusr': False, 'atime': 1470353895.4862626, 'md5': '1b9a81d6fac03c0f39fc6296e86b9d61', 'isdir': False, 'ctime': 1470353895.4862626, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '4833ac9d984930a0b95771e1f9f9b6589a5abb65', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/paver.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/paver.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470352818.0007222, 'inode': 901191, 'isgid': False, 'size': 111, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/paver.txt', 'xusr': False, 'atime': 1470352825.5325933, 'md5': '3b1b66700c2ceb14b6e58faded01bffb', 'isdir': False, 'ctime': 1470352818.0007222, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '54252af609d183b23456f5062bc5505c75ecb942', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/edx-private.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/edx-private.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470353895.4862626, 'inode': 901164, 'isgid': False, 'size': 2086, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/edx-private.txt', 'xusr': False, 'atime': 1470353895.4862626, 'md5': '5a37399f88dcb354d34837f086adb60e', 'isdir': False, 'ctime': 1470353895.4862626, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '0339b3092653a74cd3a14b2d439a43a0bb01d89f', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx-sandbox/post.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx-sandbox/post.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470352818.2527177, 'inode': 901122, 'isgid': False, 'size': 313, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx-sandbox/post.txt', 'xusr': False, 'atime': 1470353891.9743226, 'md5': '1f8d2ca7aa01706f2859c25b8bede5f3', 'isdir': False, 'ctime': 1470352818.2527177, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': 'cb294b185d8f40e49506c4c342acc8fd6b3683f6', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx-sandbox/local.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx-sandbox/local.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470352818.3847156, 'inode': 901196, 'isgid': False, 'size': 507, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx-sandbox/local.txt', 'xusr': False, 'atime': 1470353891.9743226, 'md5': '09046a50cef36e7ca9f622fd3b3b397f', 'isdir': False, 'ctime': 1470352818.3847156, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '01e96ac6feaff75b076e04cbdb2b9b9a632a7034', 'islnk': False}, 'changed': False})
changed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470353895.4862626, 'inode': 901197, 'isgid': False, 'size': 411, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx-sandbox/base.txt', 'xusr': False, 'atime': 1470353895.4862626, 'md5': 'e62d71c98cff3129bbe6333ad96f9b00', 'isdir': False, 'ctime': 1470353895.4862626, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '8f31577e172d28cddd2e202214e5dd24ab90a243', 'islnk': False}, 'changed': False})

TASK: [edxapp | gem install bundler] ****************************************** 
changed: [localhost]

TASK: [edxapp | bundle install] *********************************************** 
changed: [localhost]

TASK: [edxapp | Set the npm registry] ***************************************** 
ok: [localhost]

TASK: [edxapp | Set the npm registry permissions] ***************************** 
changed: [localhost]

TASK: [edxapp | Install edx-platform npm dependencies] ************************ 
changed: [localhost]

TASK: [edxapp | Create the virtualenv to install the Python requirements] ***** 
ok: [localhost]

TASK: [edxapp | Stat each Python requirements file to ensure it exists] ******* 
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/pre.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/github.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/custom.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/local.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/base.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/post.txt)
ok: [localhost] => (item=/edx/app/edxapp/edx-platform/requirements/edx/paver.txt)

TASK: [edxapp | install python requirements] ********************************** 
failed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/pre.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/pre.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470353897.1262343, 'inode': 901294, 'isgid': False, 'size': 508, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/pre.txt', 'xusr': False, 'atime': 1470353897.1262343, 'md5': '7763b286c06275190831255964cf8238', 'isdir': False, 'ctime': 1470353897.1262343, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '1a863e2284e87b221c853891de5a925f8434c425', 'islnk': False}, 'changed': False}) => {"changed": true, "cmd": ["/edx/app/edxapp/venvs/edxapp/bin/pip", "install", "-i", "https://pypi.python.org/simple", "--exists-action", "w", "-r", "/edx/app/edxapp/edx-platform/requirements/edx/pre.txt"], "delta": "0:00:01.503381", "end": "2016-08-04 20:38:27.846537", "item": {"changed": false, "invocation": {"module_args": "path=\"/edx/app/edxapp/edx-platform/requirements/edx/pre.txt\"", "module_complex_args": {}, "module_name": "stat"}, "item": "/edx/app/edxapp/edx-platform/requirements/edx/pre.txt", "stat": {"atime": 1470353897.1262343, "checksum": "1a863e2284e87b221c853891de5a925f8434c425", "ctime": 1470353897.1262343, "dev": 64769, "exists": true, "gid": 1002, "gr_name": "edxapp", "inode": 901294, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "md5": "7763b286c06275190831255964cf8238", "mode": "0644", "mtime": 1470353897.1262343, "nlink": 1, "path": "/edx/app/edxapp/edx-platform/requirements/edx/pre.txt", "pw_name": "edxapp", "rgrp": true, "roth": true, "rusr": true, "size": 508, "uid": 1001, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}, "rc": 2, "start": "2016-08-04 20:38:26.343156", "warnings": []}
stderr: Exception:
Traceback (most recent call last):
  File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/pip/basecommand.py", line 215, in main
    status = self.run(options, args)
  File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/pip/commands/install.py", line 317, in run
    prefix=options.prefix_path,
  File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/pip/req/req_set.py", line 736, in install
    requirement.uninstall(auto_confirm=True)
  File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/pip/req/req_install.py", line 742, in uninstall
    paths_to_remove.remove(auto_confirm)
  File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/pip/req/req_uninstall.py", line 115, in remove
    renames(path, new_path)
  File "/edx/app/edxapp/venvs/edxapp/local/lib/python2.7/site-packages/pip/utils/__init__.py", line 267, in renames
    shutil.move(old, new)
  File "/usr/lib/python2.7/shutil.py", line 303, in move
    os.unlink(src)
OSError: [Errno 13] Permission denied: '/edx/app/edxapp/venvs/edxapp/lib/python2.7/site-packages/pip-8.1.2.dist-info/DESCRIPTION.rst'
stdout: Requirement already satisfied (use --upgrade to upgrade): setuptools==18.0.1 in /edx/app/edxapp/venvs/edxapp/lib/python2.7/site-packages (from -r /edx/app/edxapp/edx-platform/requirements/edx/pre.txt (line 8))
Requirement already satisfied (use --upgrade to upgrade): numpy==1.6.2 in /edx/app/edxapp/venvs/edxapp/lib/python2.7/site-packages (from -r /edx/app/edxapp/edx-platform/requirements/edx/pre.txt (line 12))
Collecting pip==7.1.2 (from -r /edx/app/edxapp/edx-platform/requirements/edx/pre.txt (line 15))
  Using cached pip-7.1.2-py2.py3-none-any.whl
Requirement already satisfied (use --upgrade to upgrade): Cython==0.21.2 in /edx/app/edxapp/venvs/edxapp/lib/python2.7/site-packages (from -r /edx/app/edxapp/edx-platform/requirements/edx/pre.txt (line 18))
Installing collected packages: pip
  Found existing installation: pip 8.1.2
    Uninstalling pip-8.1.2:
failed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/github.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/github.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470353897.2502322, 'inode': 901189, 'isgid': False, 'size': 6029, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/github.txt', 'xusr': False, 'atime': 1470353897.2502322, 'md5': 'd93d7282464c6baf4d187bece22b38ca', 'isdir': False, 'ctime': 1470353897.2502322, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '5d581586a0426eeec37fc83b62eada0ca46176bb', 'islnk': False}, 'changed': False}) => {"cmd": "/edx/app/edxapp/venvs/edxapp/bin/pip install -i https://pypi.python.org/simple --exists-action w -r /edx/app/edxapp/edx-platform/requirements/edx/github.txt", "failed": true, "item": {"changed": false, "invocation": {"module_args": "path=\"/edx/app/edxapp/edx-platform/requirements/edx/github.txt\"", "module_complex_args": {}, "module_name": "stat"}, "item": "/edx/app/edxapp/edx-platform/requirements/edx/github.txt", "stat": {"atime": 1470353897.2502322, "checksum": "5d581586a0426eeec37fc83b62eada0ca46176bb", "ctime": 1470353897.2502322, "dev": 64769, "exists": true, "gid": 1002, "gr_name": "edxapp", "inode": 901189, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "md5": "d93d7282464c6baf4d187bece22b38ca", "mode": "0644", "mtime": 1470353897.2502322, "nlink": 1, "path": "/edx/app/edxapp/edx-platform/requirements/edx/github.txt", "pw_name": "edxapp", "rgrp": true, "roth": true, "rusr": true, "size": 6029, "uid": 1001, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}, "rc": 2}
msg: [Errno 2] No such file or directory
skipping: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/custom.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/custom.txt', 'stat': {'exists': False}, 'changed': False})
failed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/local.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/local.txt', 'stat': {'uid': 0, 'exists': True, 'woth': False, 'mtime': 1469570431.9602737, 'inode': 902584, 'isgid': False, 'size': 254, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'root', 'gid': 0, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'root', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/local.txt', 'xusr': False, 'atime': 1470330505.3892481, 'md5': '55ace0c3ccdb0b161709e8c7623be39e', 'isdir': False, 'ctime': 1469570431.9602737, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '108dd87a867bcb78ca0e0797122bb07c870157bc', 'islnk': False}, 'changed': False}) => {"cmd": "/edx/app/edxapp/venvs/edxapp/bin/pip install -i https://pypi.python.org/simple --exists-action w -r /edx/app/edxapp/edx-platform/requirements/edx/local.txt", "failed": true, "item": {"changed": false, "invocation": {"module_args": "path=\"/edx/app/edxapp/edx-platform/requirements/edx/local.txt\"", "module_complex_args": {}, "module_name": "stat"}, "item": "/edx/app/edxapp/edx-platform/requirements/edx/local.txt", "stat": {"atime": 1470330505.3892481, "checksum": "108dd87a867bcb78ca0e0797122bb07c870157bc", "ctime": 1469570431.9602737, "dev": 64769, "exists": true, "gid": 0, "gr_name": "root", "inode": 902584, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "md5": "55ace0c3ccdb0b161709e8c7623be39e", "mode": "0644", "mtime": 1469570431.9602737, "nlink": 1, "path": "/edx/app/edxapp/edx-platform/requirements/edx/local.txt", "pw_name": "root", "rgrp": true, "roth": true, "rusr": true, "size": 254, "uid": 0, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}, "rc": 2}
msg: [Errno 2] No such file or directory
failed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/base.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/base.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470353897.39023, 'inode': 901192, 'isgid': False, 'size': 3459, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/base.txt', 'xusr': False, 'atime': 1470353897.38623, 'md5': '92268cb1cbbc25a0f8d419c1647828d4', 'isdir': False, 'ctime': 1470353897.39023, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '1a36e125c54a87fa72bc3c253b4510f957dc96e5', 'islnk': False}, 'changed': False}) => {"cmd": "/edx/app/edxapp/venvs/edxapp/bin/pip install -i https://pypi.python.org/simple --exists-action w -r /edx/app/edxapp/edx-platform/requirements/edx/base.txt", "failed": true, "item": {"changed": false, "invocation": {"module_args": "path=\"/edx/app/edxapp/edx-platform/requirements/edx/base.txt\"", "module_complex_args": {}, "module_name": "stat"}, "item": "/edx/app/edxapp/edx-platform/requirements/edx/base.txt", "stat": {"atime": 1470353897.38623, "checksum": "1a36e125c54a87fa72bc3c253b4510f957dc96e5", "ctime": 1470353897.39023, "dev": 64769, "exists": true, "gid": 1002, "gr_name": "edxapp", "inode": 901192, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "md5": "92268cb1cbbc25a0f8d419c1647828d4", "mode": "0644", "mtime": 1470353897.39023, "nlink": 1, "path": "/edx/app/edxapp/edx-platform/requirements/edx/base.txt", "pw_name": "edxapp", "rgrp": true, "roth": true, "rusr": true, "size": 3459, "uid": 1001, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}, "rc": 2}
msg: [Errno 2] No such file or directory
failed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/post.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/post.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470353897.4942281, 'inode': 901188, 'isgid': False, 'size': 565, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/post.txt', 'xusr': False, 'atime': 1470353897.4942281, 'md5': '1b9a81d6fac03c0f39fc6296e86b9d61', 'isdir': False, 'ctime': 1470353897.4942281, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '4833ac9d984930a0b95771e1f9f9b6589a5abb65', 'islnk': False}, 'changed': False}) => {"cmd": "/edx/app/edxapp/venvs/edxapp/bin/pip install -i https://pypi.python.org/simple --exists-action w -r /edx/app/edxapp/edx-platform/requirements/edx/post.txt", "failed": true, "item": {"changed": false, "invocation": {"module_args": "path=\"/edx/app/edxapp/edx-platform/requirements/edx/post.txt\"", "module_complex_args": {}, "module_name": "stat"}, "item": "/edx/app/edxapp/edx-platform/requirements/edx/post.txt", "stat": {"atime": 1470353897.4942281, "checksum": "4833ac9d984930a0b95771e1f9f9b6589a5abb65", "ctime": 1470353897.4942281, "dev": 64769, "exists": true, "gid": 1002, "gr_name": "edxapp", "inode": 901188, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "md5": "1b9a81d6fac03c0f39fc6296e86b9d61", "mode": "0644", "mtime": 1470353897.4942281, "nlink": 1, "path": "/edx/app/edxapp/edx-platform/requirements/edx/post.txt", "pw_name": "edxapp", "rgrp": true, "roth": true, "rusr": true, "size": 565, "uid": 1001, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}, "rc": 2}
msg: [Errno 2] No such file or directory
failed: [localhost] => (item={'invocation': {'module_name': u'stat', 'module_complex_args': {}, 'module_args': u'path="/edx/app/edxapp/edx-platform/requirements/edx/paver.txt"'}, 'item': u'/edx/app/edxapp/edx-platform/requirements/edx/paver.txt', 'stat': {'uid': 1001, 'exists': True, 'woth': False, 'mtime': 1470353897.5942264, 'inode': 901107, 'isgid': False, 'size': 111, 'wgrp': False, 'isuid': False, 'isreg': True, 'pw_name': 'edxapp', 'gid': 1002, 'ischr': False, 'wusr': True, 'xoth': False, 'rusr': True, 'nlink': 1, 'issock': False, 'rgrp': True, 'gr_name': 'edxapp', 'path': '/edx/app/edxapp/edx-platform/requirements/edx/paver.txt', 'xusr': False, 'atime': 1470353897.5942264, 'md5': '3b1b66700c2ceb14b6e58faded01bffb', 'isdir': False, 'ctime': 1470353897.5942264, 'isblk': False, 'xgrp': False, 'dev': 64769, 'roth': True, 'isfifo': False, 'mode': '0644', 'checksum': '54252af609d183b23456f5062bc5505c75ecb942', 'islnk': False}, 'changed': False}) => {"cmd": "/edx/app/edxapp/venvs/edxapp/bin/pip install -i https://pypi.python.org/simple --exists-action w -r /edx/app/edxapp/edx-platform/requirements/edx/paver.txt", "failed": true, "item": {"changed": false, "invocation": {"module_args": "path=\"/edx/app/edxapp/edx-platform/requirements/edx/paver.txt\"", "module_complex_args": {}, "module_name": "stat"}, "item": "/edx/app/edxapp/edx-platform/requirements/edx/paver.txt", "stat": {"atime": 1470353897.5942264, "checksum": "54252af609d183b23456f5062bc5505c75ecb942", "ctime": 1470353897.5942264, "dev": 64769, "exists": true, "gid": 1002, "gr_name": "edxapp", "inode": 901107, "isblk": false, "ischr": false, "isdir": false, "isfifo": false, "isgid": false, "islnk": false, "isreg": true, "issock": false, "isuid": false, "md5": "3b1b66700c2ceb14b6e58faded01bffb", "mode": "0644", "mtime": 1470353897.5942264, "nlink": 1, "path": "/edx/app/edxapp/edx-platform/requirements/edx/paver.txt", "pw_name": "edxapp", "rgrp": true, "roth": true, "rusr": true, "size": 111, "uid": 1001, "wgrp": false, "woth": false, "wusr": true, "xgrp": false, "xoth": false, "xusr": false}}, "rc": 2}
msg: [Errno 2] No such file or directory

FATAL: all hosts have already failed -- aborting

PLAY RECAP ******************************************************************** 
           to retry, use: --limit @/root/vagrant-fullstack.retry

localhost                  : ok=199  changed=44   unreachable=0    failed=1   

